openapi: 3.0.0
info:
  title: "computate-medicale"
  version: 3.0.0
servers:
  - url: https://medicale-dev.computate.org:10580
paths:

  /callback:
    get:
      operationId: callback
      x-vertx-event-bus: computate-medicale-enUS-callback
      description: >+
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                type: string

  /logout:
    get:
      operationId: logout
      x-vertx-event-bus: computate-medicale-enUS-logout
      description: >+
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                type: string

  /photo:
    post:
      operationId: photo
      x-vertx-event-bus: computate-medicale-enUS-photo
      description: >+
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                pk:
                  type: string
                classeNomCanonique:
                  type: string
                photo:
                  type: string
                  format: binary
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                type: string

  /api/admin/enrollment:
    get:
      operationId: adminsearchMedicalEnrollment
      x-vertx-event-bus: computate-medicale-enUS-MedicalEnrollment
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Enrollment
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/AdminSearchMedicalEnrollmentResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/enrollment:
    post:
      operationId: postMedicalEnrollment
      x-vertx-event-bus: computate-medicale-enUS-MedicalEnrollment
      description: >+
      summary: >+
      tags:
        - Enrollment
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTMedicalEnrollmentRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/POSTMedicalEnrollmentResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
    patch:
      operationId: patchMedicalEnrollment
      x-vertx-event-bus: computate-medicale-enUS-MedicalEnrollment
      description: >+
      summary: >+
      tags:
        - Enrollment
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCHMedicalEnrollmentRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PATCHMedicalEnrollmentResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
    get:
      operationId: searchMedicalEnrollment
      x-vertx-event-bus: computate-medicale-enUS-MedicalEnrollment
      description: >+
      summary: >+
      tags:
        - Enrollment
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchMedicalEnrollmentResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/enrollment/copy:
    put:
      operationId: putcopyMedicalEnrollment
      x-vertx-event-bus: computate-medicale-enUS-MedicalEnrollment
      description: >+
      summary: >+
      tags:
        - Enrollment
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTCopyMedicalEnrollmentRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PUTCopyMedicalEnrollmentResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/enrollment/import:
    put:
      operationId: putimportMedicalEnrollment
      x-vertx-event-bus: computate-medicale-enUS-MedicalEnrollment
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Enrollment
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTImportMedicalEnrollmentRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PUTImportMedicalEnrollmentResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/enrollment/merge:
    put:
      operationId: putmergeMedicalEnrollment
      x-vertx-event-bus: computate-medicale-enUS-MedicalEnrollment
      description: >+
      summary: >+
      tags:
        - Enrollment
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTMergeMedicalEnrollmentRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PUTMergeMedicalEnrollmentResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/enrollment/{id}:
    get:
      operationId: getMedicalEnrollment
      x-vertx-event-bus: computate-medicale-enUS-MedicalEnrollment
      description: >+
      summary: >+
      tags:
        - Enrollment
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/GETMedicalEnrollmentResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /enrollment:
    get:
      operationId: searchpageMedicalEnrollment
      x-vertx-event-bus: computate-medicale-enUS-MedicalEnrollment
      description: >+
      summary: >+
      tags:
        - Enrollment
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchPageMedicalEnrollmentResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /enrollment/{id}:
    get:
      operationId: searchpageMedicalEnrollmentId
      x-vertx-event-bus: computate-medicale-enUS-MedicalEnrollment
      description: >+
      summary: >+
      tags:
        - Enrollment
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchPageMedicalEnrollmentResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /enrollment/payments:
    patch:
      operationId: patchpaymentsMedicalEnrollment
      x-vertx-event-bus: computate-medicale-enUS-MedicalEnrollment
      description: >+
      summary: >+
      tags:
        - Enrollment
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCHPaymentsMedicalEnrollmentRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PATCHPaymentsMedicalEnrollmentResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /refresh-enrollment:
    get:
      operationId: refreshsearchpageMedicalEnrollment
      x-vertx-event-bus: computate-medicale-enUS-MedicalEnrollment
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Enrollment
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/RefreshSearchPageMedicalEnrollmentResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /refresh-enrollment/{id}:
    get:
      operationId: refreshsearchpageMedicalEnrollmentId
      x-vertx-event-bus: computate-medicale-enUS-MedicalEnrollment
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Enrollment
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/RefreshSearchPageMedicalEnrollmentResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/clinic:
    post:
      operationId: postMedicalClinic
      x-vertx-event-bus: computate-medicale-enUS-MedicalClinic
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Clinic
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTMedicalClinicRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/POSTMedicalClinicResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
    patch:
      operationId: patchMedicalClinic
      x-vertx-event-bus: computate-medicale-enUS-MedicalClinic
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Clinic
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCHMedicalClinicRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PATCHMedicalClinicResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
    get:
      operationId: searchMedicalClinic
      x-vertx-event-bus: computate-medicale-enUS-MedicalClinic
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Clinic
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchMedicalClinicResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/clinic/copy:
    put:
      operationId: putcopyMedicalClinic
      x-vertx-event-bus: computate-medicale-enUS-MedicalClinic
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Clinic
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTCopyMedicalClinicRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PUTCopyMedicalClinicResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/clinic/import:
    put:
      operationId: putimportMedicalClinic
      x-vertx-event-bus: computate-medicale-enUS-MedicalClinic
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Clinic
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTImportMedicalClinicRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PUTImportMedicalClinicResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/clinic/merge:
    put:
      operationId: putmergeMedicalClinic
      x-vertx-event-bus: computate-medicale-enUS-MedicalClinic
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Clinic
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTMergeMedicalClinicRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PUTMergeMedicalClinicResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/clinic/{id}:
    get:
      operationId: getMedicalClinic
      x-vertx-event-bus: computate-medicale-enUS-MedicalClinic
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Clinic
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/GETMedicalClinicResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /clinic:
    get:
      operationId: searchpageMedicalClinic
      x-vertx-event-bus: computate-medicale-enUS-MedicalClinic
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Clinic
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchPageMedicalClinicResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /clinic/{id}:
    get:
      operationId: searchpageMedicalClinicId
      x-vertx-event-bus: computate-medicale-enUS-MedicalClinic
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Clinic
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchPageMedicalClinicResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/html-part:
    post:
      operationId: postHtmlPart
      x-vertx-event-bus: computate-medicale-enUS-HtmlPart
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Html Part
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTHtmlPartRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/POSTHtmlPartResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
    patch:
      operationId: patchHtmlPart
      x-vertx-event-bus: computate-medicale-enUS-HtmlPart
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Html Part
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 300
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCHHtmlPartRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PATCHHtmlPartResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
    get:
      operationId: searchHtmlPart
      x-vertx-event-bus: computate-medicale-enUS-HtmlPart
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Html Part
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 300
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchHtmlPartResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/html-part/copy:
    put:
      operationId: putcopyHtmlPart
      x-vertx-event-bus: computate-medicale-enUS-HtmlPart
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Html Part
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 300
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTCopyHtmlPartRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PUTCopyHtmlPartResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/html-part/import:
    put:
      operationId: putimportHtmlPart
      x-vertx-event-bus: computate-medicale-enUS-HtmlPart
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Html Part
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 300
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTImportHtmlPartRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PUTImportHtmlPartResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/html-part/merge:
    put:
      operationId: putmergeHtmlPart
      x-vertx-event-bus: computate-medicale-enUS-HtmlPart
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Html Part
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 300
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTMergeHtmlPartRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PUTMergeHtmlPartResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/html-part/{id}:
    get:
      operationId: getHtmlPart
      x-vertx-event-bus: computate-medicale-enUS-HtmlPart
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Html Part
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/GETHtmlPartResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /html-part:
    get:
      operationId: searchpageHtmlPart
      x-vertx-event-bus: computate-medicale-enUS-HtmlPart
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Html Part
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 300
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchPageHtmlPartResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /html-part/{id}:
    get:
      operationId: searchpageHtmlPartId
      x-vertx-event-bus: computate-medicale-enUS-HtmlPart
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Html Part
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 300
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchPageHtmlPartResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/user:
    get:
      operationId: searchSiteUser
      x-vertx-event-bus: computate-medicale-enUS-SiteUser
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - User
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchSiteUserResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
    patch:
      operationId: patchSiteUser
      x-vertx-event-bus: computate-medicale-enUS-SiteUser
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - User
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCHSiteUserRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PATCHSiteUserResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
    post:
      operationId: postSiteUser
      x-vertx-event-bus: computate-medicale-enUS-SiteUser
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - User
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTSiteUserRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/POSTSiteUserResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /user:
    get:
      operationId: searchpageSiteUser
      x-vertx-event-bus: computate-medicale-enUS-SiteUser
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - User
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchPageSiteUserResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /user/{id}:
    get:
      operationId: searchpageSiteUserId
      x-vertx-event-bus: computate-medicale-enUS-SiteUser
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - User
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchPageSiteUserResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/cluster:
    post:
      operationId: postCluster
      x-vertx-event-bus: computate-medicale-enUS-Cluster
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Cluster
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTClusterRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/POSTClusterResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
    patch:
      operationId: patchCluster
      x-vertx-event-bus: computate-medicale-enUS-Cluster
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Cluster
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCHClusterRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PATCHClusterResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
    get:
      operationId: searchCluster
      x-vertx-event-bus: computate-medicale-enUS-Cluster
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Cluster
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchClusterResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/cluster/copy:
    put:
      operationId: putcopyCluster
      x-vertx-event-bus: computate-medicale-enUS-Cluster
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Cluster
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTCopyClusterRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PUTCopyClusterResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/cluster/import:
    put:
      operationId: putimportCluster
      x-vertx-event-bus: computate-medicale-enUS-Cluster
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Cluster
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTImportClusterRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PUTImportClusterResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/cluster/merge:
    put:
      operationId: putmergeCluster
      x-vertx-event-bus: computate-medicale-enUS-Cluster
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Cluster
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTMergeClusterRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PUTMergeClusterResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/cluster/{id}:
    get:
      operationId: getCluster
      x-vertx-event-bus: computate-medicale-enUS-Cluster
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Cluster
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/GETClusterResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /cluster:
    get:
      operationId: searchpageCluster
      x-vertx-event-bus: computate-medicale-enUS-Cluster
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Cluster
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchPageClusterResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /cluster/{id}:
    get:
      operationId: searchpageClusterId
      x-vertx-event-bus: computate-medicale-enUS-Cluster
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Cluster
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchPageClusterResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /:
    get:
      operationId: homepagesearchpagePageDesign
      x-vertx-event-bus: computate-medicale-enUS-PageDesign
      description: >+
      summary: >+
      tags:
        - Page Design
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/HomePageSearchPagePageDesignResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/admin/page-design:
    get:
      operationId: adminsearchPageDesign
      x-vertx-event-bus: computate-medicale-enUS-PageDesign
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Page Design
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/AdminSearchPageDesignResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/page-design:
    post:
      operationId: postPageDesign
      x-vertx-event-bus: computate-medicale-enUS-PageDesign
      description: >+
      summary: >+
      tags:
        - Page Design
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTPageDesignRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/POSTPageDesignResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
    patch:
      operationId: patchPageDesign
      x-vertx-event-bus: computate-medicale-enUS-PageDesign
      description: >+
      summary: >+
      tags:
        - Page Design
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCHPageDesignRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PATCHPageDesignResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
    get:
      operationId: searchPageDesign
      x-vertx-event-bus: computate-medicale-enUS-PageDesign
      description: >+
      summary: >+
      tags:
        - Page Design
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchPageDesignResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/page-design/copy:
    put:
      operationId: putcopyPageDesign
      x-vertx-event-bus: computate-medicale-enUS-PageDesign
      description: >+
      summary: >+
      tags:
        - Page Design
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTCopyPageDesignRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PUTCopyPageDesignResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/page-design/import:
    put:
      operationId: putimportPageDesign
      x-vertx-event-bus: computate-medicale-enUS-PageDesign
      description: >+
      summary: >+
      tags:
        - Page Design
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTImportPageDesignRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PUTImportPageDesignResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/page-design/merge:
    put:
      operationId: putmergePageDesign
      x-vertx-event-bus: computate-medicale-enUS-PageDesign
      description: >+
      summary: >+
      tags:
        - Page Design
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTMergePageDesignRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PUTMergePageDesignResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/page-design/{id}:
    get:
      operationId: getPageDesign
      x-vertx-event-bus: computate-medicale-enUS-PageDesign
      description: >+
      summary: >+
      tags:
        - Page Design
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/GETPageDesignResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /email:
    get:
      operationId: designemailsearchpagePageDesign
      x-vertx-event-bus: computate-medicale-enUS-PageDesign
      description: >+
      summary: >+
      tags:
        - Page Design
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/DesignEmailSearchPagePageDesignResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /email/{id}:
    get:
      operationId: designemailsearchpagePageDesignId
      x-vertx-event-bus: computate-medicale-enUS-PageDesign
      description: >+
      summary: >+
      tags:
        - Page Design
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/DesignEmailSearchPagePageDesignResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /page:
    get:
      operationId: designdisplaysearchpagePageDesign
      x-vertx-event-bus: computate-medicale-enUS-PageDesign
      description: >+
      summary: >+
      tags:
        - Page Design
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/DesignDisplaySearchPagePageDesignResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /page/{id}:
    get:
      operationId: designdisplaysearchpagePageDesignId
      x-vertx-event-bus: computate-medicale-enUS-PageDesign
      description: >+
      summary: >+
      tags:
        - Page Design
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/DesignDisplaySearchPagePageDesignResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /page-design:
    get:
      operationId: searchpagePageDesign
      x-vertx-event-bus: computate-medicale-enUS-PageDesign
      description: >+
      summary: >+
      tags:
        - Page Design
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchPagePageDesignResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /page-design/{id}:
    get:
      operationId: searchpagePageDesignId
      x-vertx-event-bus: computate-medicale-enUS-PageDesign
      description: >+
      summary: >+
      tags:
        - Page Design
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchPagePageDesignResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /pdf:
    get:
      operationId: designpdfsearchpagePageDesign
      x-vertx-event-bus: computate-medicale-enUS-PageDesign
      description: >+
      summary: >+
      tags:
        - Page Design
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
      responses:
        '200':
          description: >+
          content:
            application/pdf:
              schema:
                $ref: '#/components/requestBodies/DesignPdfSearchPagePageDesignResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /pdf/{id}:
    get:
      operationId: designpdfsearchpagePageDesignId
      x-vertx-event-bus: computate-medicale-enUS-PageDesign
      description: >+
      summary: >+
      tags:
        - Page Design
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 100
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
      responses:
        '200':
          description: >+
          content:
            application/pdf:
              schema:
                $ref: '#/components/requestBodies/DesignPdfSearchPagePageDesignResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/admin/patient:
    get:
      operationId: adminsearchMedicalPatient
      x-vertx-event-bus: computate-medicale-enUS-MedicalPatient
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Patient
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/AdminSearchMedicalPatientResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/patient:
    post:
      operationId: postMedicalPatient
      x-vertx-event-bus: computate-medicale-enUS-MedicalPatient
      description: >+
      summary: >+
      tags:
        - Patient
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTMedicalPatientRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/POSTMedicalPatientResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
    patch:
      operationId: patchMedicalPatient
      x-vertx-event-bus: computate-medicale-enUS-MedicalPatient
      description: >+
      summary: >+
      tags:
        - Patient
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCHMedicalPatientRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PATCHMedicalPatientResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
    get:
      operationId: searchMedicalPatient
      x-vertx-event-bus: computate-medicale-enUS-MedicalPatient
      description: >+
      summary: >+
      tags:
        - Patient
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchMedicalPatientResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/patient/copy:
    put:
      operationId: putcopyMedicalPatient
      x-vertx-event-bus: computate-medicale-enUS-MedicalPatient
      description: >+
      summary: >+
      tags:
        - Patient
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTCopyMedicalPatientRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PUTCopyMedicalPatientResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/patient/import:
    put:
      operationId: putimportMedicalPatient
      x-vertx-event-bus: computate-medicale-enUS-MedicalPatient
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - Patient
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTImportMedicalPatientRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PUTImportMedicalPatientResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/patient/merge:
    put:
      operationId: putmergeMedicalPatient
      x-vertx-event-bus: computate-medicale-enUS-MedicalPatient
      description: >+
      summary: >+
      tags:
        - Patient
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTMergeMedicalPatientRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/PUTMergeMedicalPatientResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /api/patient/{id}:
    get:
      operationId: getMedicalPatient
      x-vertx-event-bus: computate-medicale-enUS-MedicalPatient
      description: >+
      summary: >+
      tags:
        - Patient
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/GETMedicalPatientResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /patient:
    get:
      operationId: searchpageMedicalPatient
      x-vertx-event-bus: computate-medicale-enUS-MedicalPatient
      description: >+
      summary: >+
      tags:
        - Patient
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchPageMedicalPatientResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
  /patient/{id}:
    get:
      operationId: searchpageMedicalPatientId
      x-vertx-event-bus: computate-medicale-enUS-MedicalPatient
      description: >+
      summary: >+
      tags:
        - Patient
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/requestBodies/SearchPageMedicalPatientResponse'
        '400':
          description: >+
                <table><table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>invalidRequest</td><td>Missing
                or invalid Parameters</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '401':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>error</td><td>unAuthorized</td><td>Authorization
                credentials are missing or invalid</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '403':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>accessNotConfigured</td><td>The
                request operation is not configured to access this
                resource</td><td>Channel/Country/Business provided in the request is
                not supported currently</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '404':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td><td>More
                Info</td></tr><tr><td>error</td><td>resourceNotFound</td><td>The
                requested resource was not found</td><td>Empty resource/resource not
                found</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
        '500':
          description: >+
                <table><tr><td>Type</td><td>Code</td><td>Details</td></tr><tr><td>fatal</td><td>serverUnavailable</td><td>The
                request failed due to an internal error/server
                unavailability</td></tr></table>
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/ErrorResponse'
components:
  securitySchemes:
    openIdConnect:
      type: openIdConnect
      openIdConnectUrl: https://sso.computate.org/auth/realms/COMPUTATE.ORG/.well-known/openid-configuration
  requestBodies:
    ErrorResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    AdminSearchMedicalEnrollmentResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/AdminSearchMedicalEnrollmentResponse'
    POSTMedicalEnrollmentRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTMedicalEnrollmentRequest'
    POSTMedicalEnrollmentResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/POSTMedicalEnrollmentResponse'
    PATCHMedicalEnrollmentRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PATCHMedicalEnrollmentRequest'
    PATCHMedicalEnrollmentResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PATCHMedicalEnrollmentResponse'
    SearchMedicalEnrollmentResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchMedicalEnrollmentResponse'
    PUTCopyMedicalEnrollmentRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTCopyMedicalEnrollmentRequest'
    PUTCopyMedicalEnrollmentResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTCopyMedicalEnrollmentResponse'
    PUTImportMedicalEnrollmentRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTImportMedicalEnrollmentRequest'
    PUTImportMedicalEnrollmentResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTImportMedicalEnrollmentResponse'
    PUTMergeMedicalEnrollmentRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTMergeMedicalEnrollmentRequest'
    PUTMergeMedicalEnrollmentResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTMergeMedicalEnrollmentResponse'
    GETMedicalEnrollmentResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/GETMedicalEnrollmentResponse'
    SearchPageMedicalEnrollmentResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPageMedicalEnrollmentResponse'
    PATCHPaymentsMedicalEnrollmentRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PATCHPaymentsMedicalEnrollmentRequest'
    PATCHPaymentsMedicalEnrollmentResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PATCHPaymentsMedicalEnrollmentResponse'
    RefreshSearchPageMedicalEnrollmentResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/RefreshSearchPageMedicalEnrollmentResponse'
    POSTMedicalClinicRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTMedicalClinicRequest'
    POSTMedicalClinicResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/POSTMedicalClinicResponse'
    PATCHMedicalClinicRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PATCHMedicalClinicRequest'
    PATCHMedicalClinicResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PATCHMedicalClinicResponse'
    SearchMedicalClinicResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchMedicalClinicResponse'
    PUTCopyMedicalClinicRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTCopyMedicalClinicRequest'
    PUTCopyMedicalClinicResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTCopyMedicalClinicResponse'
    PUTImportMedicalClinicRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTImportMedicalClinicRequest'
    PUTImportMedicalClinicResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTImportMedicalClinicResponse'
    PUTMergeMedicalClinicRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTMergeMedicalClinicRequest'
    PUTMergeMedicalClinicResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTMergeMedicalClinicResponse'
    GETMedicalClinicResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/GETMedicalClinicResponse'
    SearchPageMedicalClinicResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPageMedicalClinicResponse'
    POSTHtmlPartRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTHtmlPartRequest'
    POSTHtmlPartResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/POSTHtmlPartResponse'
    PATCHHtmlPartRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PATCHHtmlPartRequest'
    PATCHHtmlPartResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PATCHHtmlPartResponse'
    SearchHtmlPartResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchHtmlPartResponse'
    PUTCopyHtmlPartRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTCopyHtmlPartRequest'
    PUTCopyHtmlPartResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTCopyHtmlPartResponse'
    PUTImportHtmlPartRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTImportHtmlPartRequest'
    PUTImportHtmlPartResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTImportHtmlPartResponse'
    PUTMergeHtmlPartRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTMergeHtmlPartRequest'
    PUTMergeHtmlPartResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTMergeHtmlPartResponse'
    GETHtmlPartResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/GETHtmlPartResponse'
    SearchPageHtmlPartResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPageHtmlPartResponse'
    SearchSiteUserResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchSiteUserResponse'
    PATCHSiteUserRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PATCHSiteUserRequest'
    PATCHSiteUserResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PATCHSiteUserResponse'
    POSTSiteUserRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTSiteUserRequest'
    POSTSiteUserResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/POSTSiteUserResponse'
    SearchPageSiteUserResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPageSiteUserResponse'
    POSTClusterRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTClusterRequest'
    POSTClusterResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/POSTClusterResponse'
    PATCHClusterRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PATCHClusterRequest'
    PATCHClusterResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PATCHClusterResponse'
    SearchClusterResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchClusterResponse'
    PUTCopyClusterRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTCopyClusterRequest'
    PUTCopyClusterResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTCopyClusterResponse'
    PUTImportClusterRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTImportClusterRequest'
    PUTImportClusterResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTImportClusterResponse'
    PUTMergeClusterRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTMergeClusterRequest'
    PUTMergeClusterResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTMergeClusterResponse'
    GETClusterResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/GETClusterResponse'
    SearchPageClusterResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPageClusterResponse'
    HomePageSearchPagePageDesignResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/HomePageSearchPagePageDesignResponse'
    AdminSearchPageDesignResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/AdminSearchPageDesignResponse'
    POSTPageDesignRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTPageDesignRequest'
    POSTPageDesignResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/POSTPageDesignResponse'
    PATCHPageDesignRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PATCHPageDesignRequest'
    PATCHPageDesignResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PATCHPageDesignResponse'
    SearchPageDesignResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPageDesignResponse'
    PUTCopyPageDesignRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTCopyPageDesignRequest'
    PUTCopyPageDesignResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTCopyPageDesignResponse'
    PUTImportPageDesignRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTImportPageDesignRequest'
    PUTImportPageDesignResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTImportPageDesignResponse'
    PUTMergePageDesignRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTMergePageDesignRequest'
    PUTMergePageDesignResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTMergePageDesignResponse'
    GETPageDesignResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/GETPageDesignResponse'
    DesignEmailSearchPagePageDesignResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/DesignEmailSearchPagePageDesignResponse'
    DesignDisplaySearchPagePageDesignResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/DesignDisplaySearchPagePageDesignResponse'
    SearchPagePageDesignResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPagePageDesignResponse'
    DesignPdfSearchPagePageDesignResponse:
      content:
        application/pdf:
          schema:
            $ref: '#/components/schemas/DesignPdfSearchPagePageDesignResponse'
    AdminSearchMedicalPatientResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/AdminSearchMedicalPatientResponse'
    POSTMedicalPatientRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTMedicalPatientRequest'
    POSTMedicalPatientResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/POSTMedicalPatientResponse'
    PATCHMedicalPatientRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PATCHMedicalPatientRequest'
    PATCHMedicalPatientResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PATCHMedicalPatientResponse'
    SearchMedicalPatientResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchMedicalPatientResponse'
    PUTCopyMedicalPatientRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTCopyMedicalPatientRequest'
    PUTCopyMedicalPatientResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTCopyMedicalPatientResponse'
    PUTImportMedicalPatientRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTImportMedicalPatientRequest'
    PUTImportMedicalPatientResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTImportMedicalPatientResponse'
    PUTMergeMedicalPatientRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTMergeMedicalPatientRequest'
    PUTMergeMedicalPatientResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTMergeMedicalPatientResponse'
    GETMedicalPatientResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/GETMedicalPatientResponse'
    SearchPageMedicalPatientResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPageMedicalPatientResponse'
  schemas:
    AdminSearchMedicalEnrollmentResponse:
      allOf:
        - type: array
          items:
            type: object
            properties:
              enrollmentKey:
                type: string
              clinicKey:
                type: string
              patientKey:
                type: string
              enrollmentFormKey:
                type: string
              userKeys:
                type: array
                items:
                  type: string
              medicalSort:
                type: string
              clinicSort:
                type: string
              patientFirstName:
                type: string
              patientFirstNamePreferred:
                type: string
              patientFamilyName:
                type: string
              patientCompleteName:
                type: string
              patientCompleteNamePreferred:
                type: string
              patientBirthDate:
                type: string
              patientBirthDateYear:
                type: string
              patientBirthDateMonthOfYear:
                type: string
              patientBirthDateDayOfWeek:
                type: string
              patientBirthMonth:
                type: string
              patientBirthDay:
                type: string
              clinicName:
                type: string
              clinicCompleteName:
                type: string
              clinicLocation:
                type: string
              clinicAddress:
                type: string
              clinicPhoneNumber:
                type: string
              clinicAdministratorName:
                type: string
              enrollmentApproved:
                type: boolean
              enrollmentImmunizations:
                type: boolean
              familyAddress:
                type: string
              familyHowDoYouKnowTheClinic:
                type: string
              enrollmentSpecialConsiderations:
                type: string
              patientMedicalConditions:
                type: string
              patientPreviousClinicsAttended:
                type: string
              patientDescription:
                type: string
              patientObjectives:
                type: string
              customerProfileId:
                type: string
              createdYear:
                type: string
              createdDayOfWeek:
                type: string
              createdMonthOfYear:
                type: string
              createdHourOfDay:
                type: string
              enrollmentSignature1:
                type: string
              enrollmentSignature2:
                type: string
              enrollmentSignature3:
                type: string
              enrollmentSignature4:
                type: string
              enrollmentSignature5:
                type: string
              enrollmentSignature6:
                type: string
              enrollmentSignature7:
                type: string
              enrollmentSignature8:
                type: string
              enrollmentSignature9:
                type: string
              enrollmentSignature10:
                type: string
              enrollmentDate1:
                type: string
              enrollmentDate2:
                type: string
              enrollmentDate3:
                type: string
              enrollmentDate4:
                type: string
              enrollmentDate5:
                type: string
              enrollmentDate6:
                type: string
              enrollmentDate7:
                type: string
              enrollmentDate8:
                type: string
              enrollmentDate9:
                type: string
              enrollmentDate10:
                type: string
              enrollmentNumber:
                type: string
              enrollmentCompleteName:
                type: string
    POSTMedicalEnrollmentRequest:
      allOf:
        - $ref: "#/components/schemas/POSTClusterRequest"
        - type: object
          properties:
            enrollmentKey:
              type: string
            clinicKey:
              type: string
            patientKey:
              type: string
            enrollmentFormKey:
              type: string
            userKeys:
              type: array
              items:
                type: string
            medicalSort:
              type: string
            clinicSort:
              type: string
            patientFirstName:
              type: string
            patientFirstNamePreferred:
              type: string
            patientFamilyName:
              type: string
            patientCompleteName:
              type: string
            patientCompleteNamePreferred:
              type: string
            patientBirthDate:
              type: string
            patientBirthDateYear:
              type: string
            patientBirthDateMonthOfYear:
              type: string
            patientBirthDateDayOfWeek:
              type: string
            patientBirthMonth:
              type: string
            patientBirthDay:
              type: string
            clinicName:
              type: string
            clinicCompleteName:
              type: string
            clinicLocation:
              type: string
            clinicAddress:
              type: string
            clinicPhoneNumber:
              type: string
            clinicAdministratorName:
              type: string
            enrollmentApproved:
              type: boolean
            enrollmentImmunizations:
              type: boolean
            familyAddress:
              type: string
            familyHowDoYouKnowTheClinic:
              type: string
            enrollmentSpecialConsiderations:
              type: string
            patientMedicalConditions:
              type: string
            patientPreviousClinicsAttended:
              type: string
            patientDescription:
              type: string
            patientObjectives:
              type: string
            customerProfileId:
              type: string
            createdYear:
              type: string
            createdDayOfWeek:
              type: string
            createdMonthOfYear:
              type: string
            createdHourOfDay:
              type: string
            enrollmentSignature1:
              type: string
            enrollmentSignature2:
              type: string
            enrollmentSignature3:
              type: string
            enrollmentSignature4:
              type: string
            enrollmentSignature5:
              type: string
            enrollmentSignature6:
              type: string
            enrollmentSignature7:
              type: string
            enrollmentSignature8:
              type: string
            enrollmentSignature9:
              type: string
            enrollmentSignature10:
              type: string
            enrollmentDate1:
              type: string
            enrollmentDate2:
              type: string
            enrollmentDate3:
              type: string
            enrollmentDate4:
              type: string
            enrollmentDate5:
              type: string
            enrollmentDate6:
              type: string
            enrollmentDate7:
              type: string
            enrollmentDate8:
              type: string
            enrollmentDate9:
              type: string
            enrollmentDate10:
              type: string
            enrollmentNumber:
              type: string
            enrollmentCompleteName:
              type: string
    POSTMedicalEnrollmentResponse:
      allOf:
        - $ref: "#/components/schemas/POSTClusterResponse"
        - type: object
          properties:
            enrollmentKey:
              type: string
            clinicKey:
              type: string
            patientKey:
              type: string
            enrollmentFormKey:
              type: string
            userKeys:
              type: array
              items:
                type: string
            medicalSort:
              type: string
            clinicSort:
              type: string
            patientFirstName:
              type: string
            patientFirstNamePreferred:
              type: string
            patientFamilyName:
              type: string
            patientCompleteName:
              type: string
            patientCompleteNamePreferred:
              type: string
            patientBirthDate:
              type: string
            patientBirthDateYear:
              type: string
            patientBirthDateMonthOfYear:
              type: string
            patientBirthDateDayOfWeek:
              type: string
            patientBirthMonth:
              type: string
            patientBirthDay:
              type: string
            clinicName:
              type: string
            clinicCompleteName:
              type: string
            clinicLocation:
              type: string
            clinicAddress:
              type: string
            clinicPhoneNumber:
              type: string
            clinicAdministratorName:
              type: string
            enrollmentApproved:
              type: boolean
            enrollmentImmunizations:
              type: boolean
            familyAddress:
              type: string
            familyHowDoYouKnowTheClinic:
              type: string
            enrollmentSpecialConsiderations:
              type: string
            patientMedicalConditions:
              type: string
            patientPreviousClinicsAttended:
              type: string
            patientDescription:
              type: string
            patientObjectives:
              type: string
            customerProfileId:
              type: string
            createdYear:
              type: string
            createdDayOfWeek:
              type: string
            createdMonthOfYear:
              type: string
            createdHourOfDay:
              type: string
            enrollmentSignature1:
              type: string
            enrollmentSignature2:
              type: string
            enrollmentSignature3:
              type: string
            enrollmentSignature4:
              type: string
            enrollmentSignature5:
              type: string
            enrollmentSignature6:
              type: string
            enrollmentSignature7:
              type: string
            enrollmentSignature8:
              type: string
            enrollmentSignature9:
              type: string
            enrollmentSignature10:
              type: string
            enrollmentDate1:
              type: string
            enrollmentDate2:
              type: string
            enrollmentDate3:
              type: string
            enrollmentDate4:
              type: string
            enrollmentDate5:
              type: string
            enrollmentDate6:
              type: string
            enrollmentDate7:
              type: string
            enrollmentDate8:
              type: string
            enrollmentDate9:
              type: string
            enrollmentDate10:
              type: string
            enrollmentNumber:
              type: string
            enrollmentCompleteName:
              type: string
    PATCHMedicalEnrollmentRequest:
      allOf:
        - $ref: "#/components/schemas/PATCHClusterRequest"
        - type: object
          properties:
            setEnrollmentKey:
              type: string
              nullable: true
            removeEnrollmentKey:
              type: string
            removeAllEnrollmentKey:
              type: string
            setClinicKey:
              type: string
              nullable: true
            removeClinicKey:
              type: string
            removeAllClinicKey:
              type: string
            setPatientKey:
              type: string
              nullable: true
            removePatientKey:
              type: string
            removeAllPatientKey:
              type: string
            setEnrollmentFormKey:
              type: string
              nullable: true
            removeEnrollmentFormKey:
              type: string
            removeAllEnrollmentFormKey:
              type: string
            setUserKeys:
              type: array
              nullable: true
              items:
                type: string
            removeUserKeys:
              type: string
            removeAllUserKeys:
              type: array
              items:
                type: string
            addUserKeys:
              type: string
            addAllUserKeys:
              type: array
              items:
                type: string
            setMedicalSort:
              type: string
              nullable: true
            removeMedicalSort:
              type: string
            removeAllMedicalSort:
              type: string
            setClinicSort:
              type: string
              nullable: true
            removeClinicSort:
              type: string
            removeAllClinicSort:
              type: string
            setPatientFirstName:
              type: string
              nullable: true
            removePatientFirstName:
              type: string
            removeAllPatientFirstName:
              type: string
            setPatientFirstNamePreferred:
              type: string
              nullable: true
            removePatientFirstNamePreferred:
              type: string
            removeAllPatientFirstNamePreferred:
              type: string
            setPatientFamilyName:
              type: string
              nullable: true
            removePatientFamilyName:
              type: string
            removeAllPatientFamilyName:
              type: string
            setPatientCompleteName:
              type: string
              nullable: true
            removePatientCompleteName:
              type: string
            removeAllPatientCompleteName:
              type: string
            setPatientCompleteNamePreferred:
              type: string
              nullable: true
            removePatientCompleteNamePreferred:
              type: string
            removeAllPatientCompleteNamePreferred:
              type: string
            setPatientBirthDate:
              type: string
              nullable: true
            removePatientBirthDate:
              type: string
            removeAllPatientBirthDate:
              type: string
            setPatientBirthDateYear:
              type: string
              nullable: true
            removePatientBirthDateYear:
              type: string
            removeAllPatientBirthDateYear:
              type: string
            setPatientBirthDateMonthOfYear:
              type: string
              nullable: true
            removePatientBirthDateMonthOfYear:
              type: string
            removeAllPatientBirthDateMonthOfYear:
              type: string
            setPatientBirthDateDayOfWeek:
              type: string
              nullable: true
            removePatientBirthDateDayOfWeek:
              type: string
            removeAllPatientBirthDateDayOfWeek:
              type: string
            setPatientBirthMonth:
              type: string
              nullable: true
            removePatientBirthMonth:
              type: string
            removeAllPatientBirthMonth:
              type: string
            setPatientBirthDay:
              type: string
              nullable: true
            removePatientBirthDay:
              type: string
            removeAllPatientBirthDay:
              type: string
            setClinicName:
              type: string
              nullable: true
            removeClinicName:
              type: string
            removeAllClinicName:
              type: string
            setClinicCompleteName:
              type: string
              nullable: true
            removeClinicCompleteName:
              type: string
            removeAllClinicCompleteName:
              type: string
            setClinicLocation:
              type: string
              nullable: true
            removeClinicLocation:
              type: string
            removeAllClinicLocation:
              type: string
            setClinicAddress:
              type: string
              nullable: true
            removeClinicAddress:
              type: string
            removeAllClinicAddress:
              type: string
            setClinicPhoneNumber:
              type: string
              nullable: true
            removeClinicPhoneNumber:
              type: string
            removeAllClinicPhoneNumber:
              type: string
            setClinicAdministratorName:
              type: string
              nullable: true
            removeClinicAdministratorName:
              type: string
            removeAllClinicAdministratorName:
              type: string
            setEnrollmentApproved:
              type: boolean
              nullable: true
            removeEnrollmentApproved:
              type: boolean
            removeAllEnrollmentApproved:
              type: boolean
            setEnrollmentImmunizations:
              type: boolean
              nullable: true
            removeEnrollmentImmunizations:
              type: boolean
            removeAllEnrollmentImmunizations:
              type: boolean
            setFamilyAddress:
              type: string
              nullable: true
            removeFamilyAddress:
              type: string
            removeAllFamilyAddress:
              type: string
            setFamilyHowDoYouKnowTheClinic:
              type: string
              nullable: true
            removeFamilyHowDoYouKnowTheClinic:
              type: string
            removeAllFamilyHowDoYouKnowTheClinic:
              type: string
            setEnrollmentSpecialConsiderations:
              type: string
              nullable: true
            removeEnrollmentSpecialConsiderations:
              type: string
            removeAllEnrollmentSpecialConsiderations:
              type: string
            setPatientMedicalConditions:
              type: string
              nullable: true
            removePatientMedicalConditions:
              type: string
            removeAllPatientMedicalConditions:
              type: string
            setPatientPreviousClinicsAttended:
              type: string
              nullable: true
            removePatientPreviousClinicsAttended:
              type: string
            removeAllPatientPreviousClinicsAttended:
              type: string
            setPatientDescription:
              type: string
              nullable: true
            removePatientDescription:
              type: string
            removeAllPatientDescription:
              type: string
            setPatientObjectives:
              type: string
              nullable: true
            removePatientObjectives:
              type: string
            removeAllPatientObjectives:
              type: string
            setCustomerProfileId:
              type: string
              nullable: true
            removeCustomerProfileId:
              type: string
            removeAllCustomerProfileId:
              type: string
            setCreatedYear:
              type: string
              nullable: true
            removeCreatedYear:
              type: string
            removeAllCreatedYear:
              type: string
            setCreatedDayOfWeek:
              type: string
              nullable: true
            removeCreatedDayOfWeek:
              type: string
            removeAllCreatedDayOfWeek:
              type: string
            setCreatedMonthOfYear:
              type: string
              nullable: true
            removeCreatedMonthOfYear:
              type: string
            removeAllCreatedMonthOfYear:
              type: string
            setCreatedHourOfDay:
              type: string
              nullable: true
            removeCreatedHourOfDay:
              type: string
            removeAllCreatedHourOfDay:
              type: string
            setEnrollmentSignature1:
              type: string
              nullable: true
            removeEnrollmentSignature1:
              type: string
            removeAllEnrollmentSignature1:
              type: string
            setEnrollmentSignature2:
              type: string
              nullable: true
            removeEnrollmentSignature2:
              type: string
            removeAllEnrollmentSignature2:
              type: string
            setEnrollmentSignature3:
              type: string
              nullable: true
            removeEnrollmentSignature3:
              type: string
            removeAllEnrollmentSignature3:
              type: string
            setEnrollmentSignature4:
              type: string
              nullable: true
            removeEnrollmentSignature4:
              type: string
            removeAllEnrollmentSignature4:
              type: string
            setEnrollmentSignature5:
              type: string
              nullable: true
            removeEnrollmentSignature5:
              type: string
            removeAllEnrollmentSignature5:
              type: string
            setEnrollmentSignature6:
              type: string
              nullable: true
            removeEnrollmentSignature6:
              type: string
            removeAllEnrollmentSignature6:
              type: string
            setEnrollmentSignature7:
              type: string
              nullable: true
            removeEnrollmentSignature7:
              type: string
            removeAllEnrollmentSignature7:
              type: string
            setEnrollmentSignature8:
              type: string
              nullable: true
            removeEnrollmentSignature8:
              type: string
            removeAllEnrollmentSignature8:
              type: string
            setEnrollmentSignature9:
              type: string
              nullable: true
            removeEnrollmentSignature9:
              type: string
            removeAllEnrollmentSignature9:
              type: string
            setEnrollmentSignature10:
              type: string
              nullable: true
            removeEnrollmentSignature10:
              type: string
            removeAllEnrollmentSignature10:
              type: string
            setEnrollmentDate1:
              type: string
              nullable: true
            removeEnrollmentDate1:
              type: string
            removeAllEnrollmentDate1:
              type: string
            setEnrollmentDate2:
              type: string
              nullable: true
            removeEnrollmentDate2:
              type: string
            removeAllEnrollmentDate2:
              type: string
            setEnrollmentDate3:
              type: string
              nullable: true
            removeEnrollmentDate3:
              type: string
            removeAllEnrollmentDate3:
              type: string
            setEnrollmentDate4:
              type: string
              nullable: true
            removeEnrollmentDate4:
              type: string
            removeAllEnrollmentDate4:
              type: string
            setEnrollmentDate5:
              type: string
              nullable: true
            removeEnrollmentDate5:
              type: string
            removeAllEnrollmentDate5:
              type: string
            setEnrollmentDate6:
              type: string
              nullable: true
            removeEnrollmentDate6:
              type: string
            removeAllEnrollmentDate6:
              type: string
            setEnrollmentDate7:
              type: string
              nullable: true
            removeEnrollmentDate7:
              type: string
            removeAllEnrollmentDate7:
              type: string
            setEnrollmentDate8:
              type: string
              nullable: true
            removeEnrollmentDate8:
              type: string
            removeAllEnrollmentDate8:
              type: string
            setEnrollmentDate9:
              type: string
              nullable: true
            removeEnrollmentDate9:
              type: string
            removeAllEnrollmentDate9:
              type: string
            setEnrollmentDate10:
              type: string
              nullable: true
            removeEnrollmentDate10:
              type: string
            removeAllEnrollmentDate10:
              type: string
            setEnrollmentNumber:
              type: string
              nullable: true
            removeEnrollmentNumber:
              type: string
            removeAllEnrollmentNumber:
              type: string
            setEnrollmentCompleteName:
              type: string
              nullable: true
            removeEnrollmentCompleteName:
              type: string
            removeAllEnrollmentCompleteName:
              type: string
    PATCHMedicalEnrollmentResponse:
      allOf:
        - $ref: "#/components/schemas/PATCHClusterResponse"
        - type: object
          properties:
            setEnrollmentKey:
              type: string
              nullable: true
            removeEnrollmentKey:
              type: string
            removeAllEnrollmentKey:
              type: string
            setClinicKey:
              type: string
              nullable: true
            removeClinicKey:
              type: string
            removeAllClinicKey:
              type: string
            setPatientKey:
              type: string
              nullable: true
            removePatientKey:
              type: string
            removeAllPatientKey:
              type: string
            setEnrollmentFormKey:
              type: string
              nullable: true
            removeEnrollmentFormKey:
              type: string
            removeAllEnrollmentFormKey:
              type: string
            setUserKeys:
              type: array
              nullable: true
              items:
                type: string
            removeUserKeys:
              type: string
            removeAllUserKeys:
              type: array
              items:
                type: string
            addUserKeys:
              type: string
            addAllUserKeys:
              type: array
              items:
                type: string
            setMedicalSort:
              type: string
              nullable: true
            removeMedicalSort:
              type: string
            removeAllMedicalSort:
              type: string
            setClinicSort:
              type: string
              nullable: true
            removeClinicSort:
              type: string
            removeAllClinicSort:
              type: string
            setPatientFirstName:
              type: string
              nullable: true
            removePatientFirstName:
              type: string
            removeAllPatientFirstName:
              type: string
            setPatientFirstNamePreferred:
              type: string
              nullable: true
            removePatientFirstNamePreferred:
              type: string
            removeAllPatientFirstNamePreferred:
              type: string
            setPatientFamilyName:
              type: string
              nullable: true
            removePatientFamilyName:
              type: string
            removeAllPatientFamilyName:
              type: string
            setPatientCompleteName:
              type: string
              nullable: true
            removePatientCompleteName:
              type: string
            removeAllPatientCompleteName:
              type: string
            setPatientCompleteNamePreferred:
              type: string
              nullable: true
            removePatientCompleteNamePreferred:
              type: string
            removeAllPatientCompleteNamePreferred:
              type: string
            setPatientBirthDate:
              type: string
              nullable: true
            removePatientBirthDate:
              type: string
            removeAllPatientBirthDate:
              type: string
            setPatientBirthDateYear:
              type: string
              nullable: true
            removePatientBirthDateYear:
              type: string
            removeAllPatientBirthDateYear:
              type: string
            setPatientBirthDateMonthOfYear:
              type: string
              nullable: true
            removePatientBirthDateMonthOfYear:
              type: string
            removeAllPatientBirthDateMonthOfYear:
              type: string
            setPatientBirthDateDayOfWeek:
              type: string
              nullable: true
            removePatientBirthDateDayOfWeek:
              type: string
            removeAllPatientBirthDateDayOfWeek:
              type: string
            setPatientBirthMonth:
              type: string
              nullable: true
            removePatientBirthMonth:
              type: string
            removeAllPatientBirthMonth:
              type: string
            setPatientBirthDay:
              type: string
              nullable: true
            removePatientBirthDay:
              type: string
            removeAllPatientBirthDay:
              type: string
            setClinicName:
              type: string
              nullable: true
            removeClinicName:
              type: string
            removeAllClinicName:
              type: string
            setClinicCompleteName:
              type: string
              nullable: true
            removeClinicCompleteName:
              type: string
            removeAllClinicCompleteName:
              type: string
            setClinicLocation:
              type: string
              nullable: true
            removeClinicLocation:
              type: string
            removeAllClinicLocation:
              type: string
            setClinicAddress:
              type: string
              nullable: true
            removeClinicAddress:
              type: string
            removeAllClinicAddress:
              type: string
            setClinicPhoneNumber:
              type: string
              nullable: true
            removeClinicPhoneNumber:
              type: string
            removeAllClinicPhoneNumber:
              type: string
            setClinicAdministratorName:
              type: string
              nullable: true
            removeClinicAdministratorName:
              type: string
            removeAllClinicAdministratorName:
              type: string
            setEnrollmentApproved:
              type: boolean
              nullable: true
            removeEnrollmentApproved:
              type: boolean
            removeAllEnrollmentApproved:
              type: boolean
            setEnrollmentImmunizations:
              type: boolean
              nullable: true
            removeEnrollmentImmunizations:
              type: boolean
            removeAllEnrollmentImmunizations:
              type: boolean
            setFamilyAddress:
              type: string
              nullable: true
            removeFamilyAddress:
              type: string
            removeAllFamilyAddress:
              type: string
            setFamilyHowDoYouKnowTheClinic:
              type: string
              nullable: true
            removeFamilyHowDoYouKnowTheClinic:
              type: string
            removeAllFamilyHowDoYouKnowTheClinic:
              type: string
            setEnrollmentSpecialConsiderations:
              type: string
              nullable: true
            removeEnrollmentSpecialConsiderations:
              type: string
            removeAllEnrollmentSpecialConsiderations:
              type: string
            setPatientMedicalConditions:
              type: string
              nullable: true
            removePatientMedicalConditions:
              type: string
            removeAllPatientMedicalConditions:
              type: string
            setPatientPreviousClinicsAttended:
              type: string
              nullable: true
            removePatientPreviousClinicsAttended:
              type: string
            removeAllPatientPreviousClinicsAttended:
              type: string
            setPatientDescription:
              type: string
              nullable: true
            removePatientDescription:
              type: string
            removeAllPatientDescription:
              type: string
            setPatientObjectives:
              type: string
              nullable: true
            removePatientObjectives:
              type: string
            removeAllPatientObjectives:
              type: string
            setCustomerProfileId:
              type: string
              nullable: true
            removeCustomerProfileId:
              type: string
            removeAllCustomerProfileId:
              type: string
            setCreatedYear:
              type: string
              nullable: true
            removeCreatedYear:
              type: string
            removeAllCreatedYear:
              type: string
            setCreatedDayOfWeek:
              type: string
              nullable: true
            removeCreatedDayOfWeek:
              type: string
            removeAllCreatedDayOfWeek:
              type: string
            setCreatedMonthOfYear:
              type: string
              nullable: true
            removeCreatedMonthOfYear:
              type: string
            removeAllCreatedMonthOfYear:
              type: string
            setCreatedHourOfDay:
              type: string
              nullable: true
            removeCreatedHourOfDay:
              type: string
            removeAllCreatedHourOfDay:
              type: string
            setEnrollmentSignature1:
              type: string
              nullable: true
            removeEnrollmentSignature1:
              type: string
            removeAllEnrollmentSignature1:
              type: string
            setEnrollmentSignature2:
              type: string
              nullable: true
            removeEnrollmentSignature2:
              type: string
            removeAllEnrollmentSignature2:
              type: string
            setEnrollmentSignature3:
              type: string
              nullable: true
            removeEnrollmentSignature3:
              type: string
            removeAllEnrollmentSignature3:
              type: string
            setEnrollmentSignature4:
              type: string
              nullable: true
            removeEnrollmentSignature4:
              type: string
            removeAllEnrollmentSignature4:
              type: string
            setEnrollmentSignature5:
              type: string
              nullable: true
            removeEnrollmentSignature5:
              type: string
            removeAllEnrollmentSignature5:
              type: string
            setEnrollmentSignature6:
              type: string
              nullable: true
            removeEnrollmentSignature6:
              type: string
            removeAllEnrollmentSignature6:
              type: string
            setEnrollmentSignature7:
              type: string
              nullable: true
            removeEnrollmentSignature7:
              type: string
            removeAllEnrollmentSignature7:
              type: string
            setEnrollmentSignature8:
              type: string
              nullable: true
            removeEnrollmentSignature8:
              type: string
            removeAllEnrollmentSignature8:
              type: string
            setEnrollmentSignature9:
              type: string
              nullable: true
            removeEnrollmentSignature9:
              type: string
            removeAllEnrollmentSignature9:
              type: string
            setEnrollmentSignature10:
              type: string
              nullable: true
            removeEnrollmentSignature10:
              type: string
            removeAllEnrollmentSignature10:
              type: string
            setEnrollmentDate1:
              type: string
              nullable: true
            removeEnrollmentDate1:
              type: string
            removeAllEnrollmentDate1:
              type: string
            setEnrollmentDate2:
              type: string
              nullable: true
            removeEnrollmentDate2:
              type: string
            removeAllEnrollmentDate2:
              type: string
            setEnrollmentDate3:
              type: string
              nullable: true
            removeEnrollmentDate3:
              type: string
            removeAllEnrollmentDate3:
              type: string
            setEnrollmentDate4:
              type: string
              nullable: true
            removeEnrollmentDate4:
              type: string
            removeAllEnrollmentDate4:
              type: string
            setEnrollmentDate5:
              type: string
              nullable: true
            removeEnrollmentDate5:
              type: string
            removeAllEnrollmentDate5:
              type: string
            setEnrollmentDate6:
              type: string
              nullable: true
            removeEnrollmentDate6:
              type: string
            removeAllEnrollmentDate6:
              type: string
            setEnrollmentDate7:
              type: string
              nullable: true
            removeEnrollmentDate7:
              type: string
            removeAllEnrollmentDate7:
              type: string
            setEnrollmentDate8:
              type: string
              nullable: true
            removeEnrollmentDate8:
              type: string
            removeAllEnrollmentDate8:
              type: string
            setEnrollmentDate9:
              type: string
              nullable: true
            removeEnrollmentDate9:
              type: string
            removeAllEnrollmentDate9:
              type: string
            setEnrollmentDate10:
              type: string
              nullable: true
            removeEnrollmentDate10:
              type: string
            removeAllEnrollmentDate10:
              type: string
            setEnrollmentNumber:
              type: string
              nullable: true
            removeEnrollmentNumber:
              type: string
            removeAllEnrollmentNumber:
              type: string
            setEnrollmentCompleteName:
              type: string
              nullable: true
            removeEnrollmentCompleteName:
              type: string
            removeAllEnrollmentCompleteName:
              type: string
    SearchMedicalEnrollmentResponse:
      allOf:
        - $ref: "#/components/schemas/SearchClusterResponse"
        - type: array
          items:
            type: object
            properties:
              enrollmentKey:
                type: string
              clinicKey:
                type: string
              patientKey:
                type: string
              enrollmentFormKey:
                type: string
              userKeys:
                type: array
                items:
                  type: string
              medicalSort:
                type: string
              clinicSort:
                type: string
              patientFirstName:
                type: string
              patientFirstNamePreferred:
                type: string
              patientFamilyName:
                type: string
              patientCompleteName:
                type: string
              patientCompleteNamePreferred:
                type: string
              patientBirthDate:
                type: string
              patientBirthDateYear:
                type: string
              patientBirthDateMonthOfYear:
                type: string
              patientBirthDateDayOfWeek:
                type: string
              patientBirthMonth:
                type: string
              patientBirthDay:
                type: string
              clinicName:
                type: string
              clinicCompleteName:
                type: string
              clinicLocation:
                type: string
              clinicAddress:
                type: string
              clinicPhoneNumber:
                type: string
              clinicAdministratorName:
                type: string
              enrollmentApproved:
                type: boolean
              enrollmentImmunizations:
                type: boolean
              familyAddress:
                type: string
              familyHowDoYouKnowTheClinic:
                type: string
              enrollmentSpecialConsiderations:
                type: string
              patientMedicalConditions:
                type: string
              patientPreviousClinicsAttended:
                type: string
              patientDescription:
                type: string
              patientObjectives:
                type: string
              customerProfileId:
                type: string
              createdYear:
                type: string
              createdDayOfWeek:
                type: string
              createdMonthOfYear:
                type: string
              createdHourOfDay:
                type: string
              enrollmentSignature1:
                type: string
              enrollmentSignature2:
                type: string
              enrollmentSignature3:
                type: string
              enrollmentSignature4:
                type: string
              enrollmentSignature5:
                type: string
              enrollmentSignature6:
                type: string
              enrollmentSignature7:
                type: string
              enrollmentSignature8:
                type: string
              enrollmentSignature9:
                type: string
              enrollmentSignature10:
                type: string
              enrollmentDate1:
                type: string
              enrollmentDate2:
                type: string
              enrollmentDate3:
                type: string
              enrollmentDate4:
                type: string
              enrollmentDate5:
                type: string
              enrollmentDate6:
                type: string
              enrollmentDate7:
                type: string
              enrollmentDate8:
                type: string
              enrollmentDate9:
                type: string
              enrollmentDate10:
                type: string
              enrollmentNumber:
                type: string
              enrollmentCompleteName:
                type: string
    PUTCopyMedicalEnrollmentRequest:
      allOf:
        - $ref: "#/components/schemas/PUTCopyClusterRequest"
        - type: object
          properties:
            enrollmentKey:
              type: string
            clinicKey:
              type: string
            patientKey:
              type: string
            enrollmentFormKey:
              type: string
            userKeys:
              type: array
              items:
                type: string
            medicalSort:
              type: string
            clinicSort:
              type: string
            patientFirstName:
              type: string
            patientFirstNamePreferred:
              type: string
            patientFamilyName:
              type: string
            patientCompleteName:
              type: string
            patientCompleteNamePreferred:
              type: string
            patientBirthDate:
              type: string
            patientBirthDateYear:
              type: string
            patientBirthDateMonthOfYear:
              type: string
            patientBirthDateDayOfWeek:
              type: string
            patientBirthMonth:
              type: string
            patientBirthDay:
              type: string
            clinicName:
              type: string
            clinicCompleteName:
              type: string
            clinicLocation:
              type: string
            clinicAddress:
              type: string
            clinicPhoneNumber:
              type: string
            clinicAdministratorName:
              type: string
            enrollmentApproved:
              type: boolean
            enrollmentImmunizations:
              type: boolean
            familyAddress:
              type: string
            familyHowDoYouKnowTheClinic:
              type: string
            enrollmentSpecialConsiderations:
              type: string
            patientMedicalConditions:
              type: string
            patientPreviousClinicsAttended:
              type: string
            patientDescription:
              type: string
            patientObjectives:
              type: string
            customerProfileId:
              type: string
            createdYear:
              type: string
            createdDayOfWeek:
              type: string
            createdMonthOfYear:
              type: string
            createdHourOfDay:
              type: string
            enrollmentSignature1:
              type: string
            enrollmentSignature2:
              type: string
            enrollmentSignature3:
              type: string
            enrollmentSignature4:
              type: string
            enrollmentSignature5:
              type: string
            enrollmentSignature6:
              type: string
            enrollmentSignature7:
              type: string
            enrollmentSignature8:
              type: string
            enrollmentSignature9:
              type: string
            enrollmentSignature10:
              type: string
            enrollmentDate1:
              type: string
            enrollmentDate2:
              type: string
            enrollmentDate3:
              type: string
            enrollmentDate4:
              type: string
            enrollmentDate5:
              type: string
            enrollmentDate6:
              type: string
            enrollmentDate7:
              type: string
            enrollmentDate8:
              type: string
            enrollmentDate9:
              type: string
            enrollmentDate10:
              type: string
            enrollmentNumber:
              type: string
            enrollmentCompleteName:
              type: string
    PUTCopyMedicalEnrollmentResponse:
      allOf:
        - $ref: "#/components/schemas/PUTCopyClusterResponse"
        - type: object
          properties:
            enrollmentKey:
              type: string
            clinicKey:
              type: string
            patientKey:
              type: string
            enrollmentFormKey:
              type: string
            userKeys:
              type: array
              items:
                type: string
            medicalSort:
              type: string
            clinicSort:
              type: string
            patientFirstName:
              type: string
            patientFirstNamePreferred:
              type: string
            patientFamilyName:
              type: string
            patientCompleteName:
              type: string
            patientCompleteNamePreferred:
              type: string
            patientBirthDate:
              type: string
            patientBirthDateYear:
              type: string
            patientBirthDateMonthOfYear:
              type: string
            patientBirthDateDayOfWeek:
              type: string
            patientBirthMonth:
              type: string
            patientBirthDay:
              type: string
            clinicName:
              type: string
            clinicCompleteName:
              type: string
            clinicLocation:
              type: string
            clinicAddress:
              type: string
            clinicPhoneNumber:
              type: string
            clinicAdministratorName:
              type: string
            enrollmentApproved:
              type: boolean
            enrollmentImmunizations:
              type: boolean
            familyAddress:
              type: string
            familyHowDoYouKnowTheClinic:
              type: string
            enrollmentSpecialConsiderations:
              type: string
            patientMedicalConditions:
              type: string
            patientPreviousClinicsAttended:
              type: string
            patientDescription:
              type: string
            patientObjectives:
              type: string
            customerProfileId:
              type: string
            createdYear:
              type: string
            createdDayOfWeek:
              type: string
            createdMonthOfYear:
              type: string
            createdHourOfDay:
              type: string
            enrollmentSignature1:
              type: string
            enrollmentSignature2:
              type: string
            enrollmentSignature3:
              type: string
            enrollmentSignature4:
              type: string
            enrollmentSignature5:
              type: string
            enrollmentSignature6:
              type: string
            enrollmentSignature7:
              type: string
            enrollmentSignature8:
              type: string
            enrollmentSignature9:
              type: string
            enrollmentSignature10:
              type: string
            enrollmentDate1:
              type: string
            enrollmentDate2:
              type: string
            enrollmentDate3:
              type: string
            enrollmentDate4:
              type: string
            enrollmentDate5:
              type: string
            enrollmentDate6:
              type: string
            enrollmentDate7:
              type: string
            enrollmentDate8:
              type: string
            enrollmentDate9:
              type: string
            enrollmentDate10:
              type: string
            enrollmentNumber:
              type: string
            enrollmentCompleteName:
              type: string
    PUTImportMedicalEnrollmentRequest:
      allOf:
        - $ref: "#/components/schemas/PUTImportClusterRequest"
        - type: object
          properties:
            enrollmentKey:
              type: string
            clinicKey:
              type: string
            patientKey:
              type: string
            enrollmentFormKey:
              type: string
            userKeys:
              type: array
              items:
                type: string
            medicalSort:
              type: string
            clinicSort:
              type: string
            patientFirstName:
              type: string
            patientFirstNamePreferred:
              type: string
            patientFamilyName:
              type: string
            patientCompleteName:
              type: string
            patientCompleteNamePreferred:
              type: string
            patientBirthDate:
              type: string
            patientBirthDateYear:
              type: string
            patientBirthDateMonthOfYear:
              type: string
            patientBirthDateDayOfWeek:
              type: string
            patientBirthMonth:
              type: string
            patientBirthDay:
              type: string
            clinicName:
              type: string
            clinicCompleteName:
              type: string
            clinicLocation:
              type: string
            clinicAddress:
              type: string
            clinicPhoneNumber:
              type: string
            clinicAdministratorName:
              type: string
            enrollmentApproved:
              type: boolean
            enrollmentImmunizations:
              type: boolean
            familyAddress:
              type: string
            familyHowDoYouKnowTheClinic:
              type: string
            enrollmentSpecialConsiderations:
              type: string
            patientMedicalConditions:
              type: string
            patientPreviousClinicsAttended:
              type: string
            patientDescription:
              type: string
            patientObjectives:
              type: string
            customerProfileId:
              type: string
            createdYear:
              type: string
            createdDayOfWeek:
              type: string
            createdMonthOfYear:
              type: string
            createdHourOfDay:
              type: string
            enrollmentSignature1:
              type: string
            enrollmentSignature2:
              type: string
            enrollmentSignature3:
              type: string
            enrollmentSignature4:
              type: string
            enrollmentSignature5:
              type: string
            enrollmentSignature6:
              type: string
            enrollmentSignature7:
              type: string
            enrollmentSignature8:
              type: string
            enrollmentSignature9:
              type: string
            enrollmentSignature10:
              type: string
            enrollmentDate1:
              type: string
            enrollmentDate2:
              type: string
            enrollmentDate3:
              type: string
            enrollmentDate4:
              type: string
            enrollmentDate5:
              type: string
            enrollmentDate6:
              type: string
            enrollmentDate7:
              type: string
            enrollmentDate8:
              type: string
            enrollmentDate9:
              type: string
            enrollmentDate10:
              type: string
            enrollmentNumber:
              type: string
            enrollmentCompleteName:
              type: string
    PUTImportMedicalEnrollmentResponse:
      allOf:
        - $ref: "#/components/schemas/PUTImportClusterResponse"
        - type: object
          properties:
            enrollmentKey:
              type: string
            clinicKey:
              type: string
            patientKey:
              type: string
            enrollmentFormKey:
              type: string
            userKeys:
              type: array
              items:
                type: string
            medicalSort:
              type: string
            clinicSort:
              type: string
            patientFirstName:
              type: string
            patientFirstNamePreferred:
              type: string
            patientFamilyName:
              type: string
            patientCompleteName:
              type: string
            patientCompleteNamePreferred:
              type: string
            patientBirthDate:
              type: string
            patientBirthDateYear:
              type: string
            patientBirthDateMonthOfYear:
              type: string
            patientBirthDateDayOfWeek:
              type: string
            patientBirthMonth:
              type: string
            patientBirthDay:
              type: string
            clinicName:
              type: string
            clinicCompleteName:
              type: string
            clinicLocation:
              type: string
            clinicAddress:
              type: string
            clinicPhoneNumber:
              type: string
            clinicAdministratorName:
              type: string
            enrollmentApproved:
              type: boolean
            enrollmentImmunizations:
              type: boolean
            familyAddress:
              type: string
            familyHowDoYouKnowTheClinic:
              type: string
            enrollmentSpecialConsiderations:
              type: string
            patientMedicalConditions:
              type: string
            patientPreviousClinicsAttended:
              type: string
            patientDescription:
              type: string
            patientObjectives:
              type: string
            customerProfileId:
              type: string
            createdYear:
              type: string
            createdDayOfWeek:
              type: string
            createdMonthOfYear:
              type: string
            createdHourOfDay:
              type: string
            enrollmentSignature1:
              type: string
            enrollmentSignature2:
              type: string
            enrollmentSignature3:
              type: string
            enrollmentSignature4:
              type: string
            enrollmentSignature5:
              type: string
            enrollmentSignature6:
              type: string
            enrollmentSignature7:
              type: string
            enrollmentSignature8:
              type: string
            enrollmentSignature9:
              type: string
            enrollmentSignature10:
              type: string
            enrollmentDate1:
              type: string
            enrollmentDate2:
              type: string
            enrollmentDate3:
              type: string
            enrollmentDate4:
              type: string
            enrollmentDate5:
              type: string
            enrollmentDate6:
              type: string
            enrollmentDate7:
              type: string
            enrollmentDate8:
              type: string
            enrollmentDate9:
              type: string
            enrollmentDate10:
              type: string
            enrollmentNumber:
              type: string
            enrollmentCompleteName:
              type: string
    PUTMergeMedicalEnrollmentRequest:
      allOf:
        - $ref: "#/components/schemas/PUTMergeClusterRequest"
        - type: object
          properties:
            enrollmentKey:
              type: string
            clinicKey:
              type: string
            patientKey:
              type: string
            enrollmentFormKey:
              type: string
            userKeys:
              type: array
              items:
                type: string
            medicalSort:
              type: string
            clinicSort:
              type: string
            patientFirstName:
              type: string
            patientFirstNamePreferred:
              type: string
            patientFamilyName:
              type: string
            patientCompleteName:
              type: string
            patientCompleteNamePreferred:
              type: string
            patientBirthDate:
              type: string
            patientBirthDateYear:
              type: string
            patientBirthDateMonthOfYear:
              type: string
            patientBirthDateDayOfWeek:
              type: string
            patientBirthMonth:
              type: string
            patientBirthDay:
              type: string
            clinicName:
              type: string
            clinicCompleteName:
              type: string
            clinicLocation:
              type: string
            clinicAddress:
              type: string
            clinicPhoneNumber:
              type: string
            clinicAdministratorName:
              type: string
            enrollmentApproved:
              type: boolean
            enrollmentImmunizations:
              type: boolean
            familyAddress:
              type: string
            familyHowDoYouKnowTheClinic:
              type: string
            enrollmentSpecialConsiderations:
              type: string
            patientMedicalConditions:
              type: string
            patientPreviousClinicsAttended:
              type: string
            patientDescription:
              type: string
            patientObjectives:
              type: string
            customerProfileId:
              type: string
            createdYear:
              type: string
            createdDayOfWeek:
              type: string
            createdMonthOfYear:
              type: string
            createdHourOfDay:
              type: string
            enrollmentSignature1:
              type: string
            enrollmentSignature2:
              type: string
            enrollmentSignature3:
              type: string
            enrollmentSignature4:
              type: string
            enrollmentSignature5:
              type: string
            enrollmentSignature6:
              type: string
            enrollmentSignature7:
              type: string
            enrollmentSignature8:
              type: string
            enrollmentSignature9:
              type: string
            enrollmentSignature10:
              type: string
            enrollmentDate1:
              type: string
            enrollmentDate2:
              type: string
            enrollmentDate3:
              type: string
            enrollmentDate4:
              type: string
            enrollmentDate5:
              type: string
            enrollmentDate6:
              type: string
            enrollmentDate7:
              type: string
            enrollmentDate8:
              type: string
            enrollmentDate9:
              type: string
            enrollmentDate10:
              type: string
            enrollmentNumber:
              type: string
            enrollmentCompleteName:
              type: string
    PUTMergeMedicalEnrollmentResponse:
      allOf:
        - $ref: "#/components/schemas/PUTMergeClusterResponse"
        - type: object
          properties:
            enrollmentKey:
              type: string
            clinicKey:
              type: string
            patientKey:
              type: string
            enrollmentFormKey:
              type: string
            userKeys:
              type: array
              items:
                type: string
            medicalSort:
              type: string
            clinicSort:
              type: string
            patientFirstName:
              type: string
            patientFirstNamePreferred:
              type: string
            patientFamilyName:
              type: string
            patientCompleteName:
              type: string
            patientCompleteNamePreferred:
              type: string
            patientBirthDate:
              type: string
            patientBirthDateYear:
              type: string
            patientBirthDateMonthOfYear:
              type: string
            patientBirthDateDayOfWeek:
              type: string
            patientBirthMonth:
              type: string
            patientBirthDay:
              type: string
            clinicName:
              type: string
            clinicCompleteName:
              type: string
            clinicLocation:
              type: string
            clinicAddress:
              type: string
            clinicPhoneNumber:
              type: string
            clinicAdministratorName:
              type: string
            enrollmentApproved:
              type: boolean
            enrollmentImmunizations:
              type: boolean
            familyAddress:
              type: string
            familyHowDoYouKnowTheClinic:
              type: string
            enrollmentSpecialConsiderations:
              type: string
            patientMedicalConditions:
              type: string
            patientPreviousClinicsAttended:
              type: string
            patientDescription:
              type: string
            patientObjectives:
              type: string
            customerProfileId:
              type: string
            createdYear:
              type: string
            createdDayOfWeek:
              type: string
            createdMonthOfYear:
              type: string
            createdHourOfDay:
              type: string
            enrollmentSignature1:
              type: string
            enrollmentSignature2:
              type: string
            enrollmentSignature3:
              type: string
            enrollmentSignature4:
              type: string
            enrollmentSignature5:
              type: string
            enrollmentSignature6:
              type: string
            enrollmentSignature7:
              type: string
            enrollmentSignature8:
              type: string
            enrollmentSignature9:
              type: string
            enrollmentSignature10:
              type: string
            enrollmentDate1:
              type: string
            enrollmentDate2:
              type: string
            enrollmentDate3:
              type: string
            enrollmentDate4:
              type: string
            enrollmentDate5:
              type: string
            enrollmentDate6:
              type: string
            enrollmentDate7:
              type: string
            enrollmentDate8:
              type: string
            enrollmentDate9:
              type: string
            enrollmentDate10:
              type: string
            enrollmentNumber:
              type: string
            enrollmentCompleteName:
              type: string
    GETMedicalEnrollmentResponse:
      allOf:
        - $ref: "#/components/schemas/GETClusterResponse"
        - type: object
          properties:
            enrollmentKey:
              type: string
            clinicKey:
              type: string
            patientKey:
              type: string
            enrollmentFormKey:
              type: string
            userKeys:
              type: array
              items:
                type: string
            medicalSort:
              type: string
            clinicSort:
              type: string
            patientFirstName:
              type: string
            patientFirstNamePreferred:
              type: string
            patientFamilyName:
              type: string
            patientCompleteName:
              type: string
            patientCompleteNamePreferred:
              type: string
            patientBirthDate:
              type: string
            patientBirthDateYear:
              type: string
            patientBirthDateMonthOfYear:
              type: string
            patientBirthDateDayOfWeek:
              type: string
            patientBirthMonth:
              type: string
            patientBirthDay:
              type: string
            clinicName:
              type: string
            clinicCompleteName:
              type: string
            clinicLocation:
              type: string
            clinicAddress:
              type: string
            clinicPhoneNumber:
              type: string
            clinicAdministratorName:
              type: string
            enrollmentApproved:
              type: boolean
            enrollmentImmunizations:
              type: boolean
            familyAddress:
              type: string
            familyHowDoYouKnowTheClinic:
              type: string
            enrollmentSpecialConsiderations:
              type: string
            patientMedicalConditions:
              type: string
            patientPreviousClinicsAttended:
              type: string
            patientDescription:
              type: string
            patientObjectives:
              type: string
            customerProfileId:
              type: string
            createdYear:
              type: string
            createdDayOfWeek:
              type: string
            createdMonthOfYear:
              type: string
            createdHourOfDay:
              type: string
            enrollmentSignature1:
              type: string
            enrollmentSignature2:
              type: string
            enrollmentSignature3:
              type: string
            enrollmentSignature4:
              type: string
            enrollmentSignature5:
              type: string
            enrollmentSignature6:
              type: string
            enrollmentSignature7:
              type: string
            enrollmentSignature8:
              type: string
            enrollmentSignature9:
              type: string
            enrollmentSignature10:
              type: string
            enrollmentDate1:
              type: string
            enrollmentDate2:
              type: string
            enrollmentDate3:
              type: string
            enrollmentDate4:
              type: string
            enrollmentDate5:
              type: string
            enrollmentDate6:
              type: string
            enrollmentDate7:
              type: string
            enrollmentDate8:
              type: string
            enrollmentDate9:
              type: string
            enrollmentDate10:
              type: string
            enrollmentNumber:
              type: string
            enrollmentCompleteName:
              type: string
    SearchPageMedicalEnrollmentResponse:
      allOf:
        - type: string
    PATCHPaymentsMedicalEnrollmentRequest:
      allOf:
        - type: object
          properties:
            setEnrollmentKey:
              type: string
              nullable: true
            removeEnrollmentKey:
              type: string
            removeAllEnrollmentKey:
              type: string
            setClinicKey:
              type: string
              nullable: true
            removeClinicKey:
              type: string
            removeAllClinicKey:
              type: string
            setPatientKey:
              type: string
              nullable: true
            removePatientKey:
              type: string
            removeAllPatientKey:
              type: string
            setEnrollmentFormKey:
              type: string
              nullable: true
            removeEnrollmentFormKey:
              type: string
            removeAllEnrollmentFormKey:
              type: string
            setUserKeys:
              type: array
              nullable: true
              items:
                type: string
            removeUserKeys:
              type: string
            removeAllUserKeys:
              type: array
              items:
                type: string
            addUserKeys:
              type: string
            addAllUserKeys:
              type: array
              items:
                type: string
            setMedicalSort:
              type: string
              nullable: true
            removeMedicalSort:
              type: string
            removeAllMedicalSort:
              type: string
            setClinicSort:
              type: string
              nullable: true
            removeClinicSort:
              type: string
            removeAllClinicSort:
              type: string
            setPatientFirstName:
              type: string
              nullable: true
            removePatientFirstName:
              type: string
            removeAllPatientFirstName:
              type: string
            setPatientFirstNamePreferred:
              type: string
              nullable: true
            removePatientFirstNamePreferred:
              type: string
            removeAllPatientFirstNamePreferred:
              type: string
            setPatientFamilyName:
              type: string
              nullable: true
            removePatientFamilyName:
              type: string
            removeAllPatientFamilyName:
              type: string
            setPatientCompleteName:
              type: string
              nullable: true
            removePatientCompleteName:
              type: string
            removeAllPatientCompleteName:
              type: string
            setPatientCompleteNamePreferred:
              type: string
              nullable: true
            removePatientCompleteNamePreferred:
              type: string
            removeAllPatientCompleteNamePreferred:
              type: string
            setPatientBirthDate:
              type: string
              nullable: true
            removePatientBirthDate:
              type: string
            removeAllPatientBirthDate:
              type: string
            setPatientBirthDateYear:
              type: string
              nullable: true
            removePatientBirthDateYear:
              type: string
            removeAllPatientBirthDateYear:
              type: string
            setPatientBirthDateMonthOfYear:
              type: string
              nullable: true
            removePatientBirthDateMonthOfYear:
              type: string
            removeAllPatientBirthDateMonthOfYear:
              type: string
            setPatientBirthDateDayOfWeek:
              type: string
              nullable: true
            removePatientBirthDateDayOfWeek:
              type: string
            removeAllPatientBirthDateDayOfWeek:
              type: string
            setPatientBirthMonth:
              type: string
              nullable: true
            removePatientBirthMonth:
              type: string
            removeAllPatientBirthMonth:
              type: string
            setPatientBirthDay:
              type: string
              nullable: true
            removePatientBirthDay:
              type: string
            removeAllPatientBirthDay:
              type: string
            setClinicName:
              type: string
              nullable: true
            removeClinicName:
              type: string
            removeAllClinicName:
              type: string
            setClinicCompleteName:
              type: string
              nullable: true
            removeClinicCompleteName:
              type: string
            removeAllClinicCompleteName:
              type: string
            setClinicLocation:
              type: string
              nullable: true
            removeClinicLocation:
              type: string
            removeAllClinicLocation:
              type: string
            setClinicAddress:
              type: string
              nullable: true
            removeClinicAddress:
              type: string
            removeAllClinicAddress:
              type: string
            setClinicPhoneNumber:
              type: string
              nullable: true
            removeClinicPhoneNumber:
              type: string
            removeAllClinicPhoneNumber:
              type: string
            setClinicAdministratorName:
              type: string
              nullable: true
            removeClinicAdministratorName:
              type: string
            removeAllClinicAdministratorName:
              type: string
            setEnrollmentApproved:
              type: boolean
              nullable: true
            removeEnrollmentApproved:
              type: boolean
            removeAllEnrollmentApproved:
              type: boolean
            setEnrollmentImmunizations:
              type: boolean
              nullable: true
            removeEnrollmentImmunizations:
              type: boolean
            removeAllEnrollmentImmunizations:
              type: boolean
            setFamilyAddress:
              type: string
              nullable: true
            removeFamilyAddress:
              type: string
            removeAllFamilyAddress:
              type: string
            setFamilyHowDoYouKnowTheClinic:
              type: string
              nullable: true
            removeFamilyHowDoYouKnowTheClinic:
              type: string
            removeAllFamilyHowDoYouKnowTheClinic:
              type: string
            setEnrollmentSpecialConsiderations:
              type: string
              nullable: true
            removeEnrollmentSpecialConsiderations:
              type: string
            removeAllEnrollmentSpecialConsiderations:
              type: string
            setPatientMedicalConditions:
              type: string
              nullable: true
            removePatientMedicalConditions:
              type: string
            removeAllPatientMedicalConditions:
              type: string
            setPatientPreviousClinicsAttended:
              type: string
              nullable: true
            removePatientPreviousClinicsAttended:
              type: string
            removeAllPatientPreviousClinicsAttended:
              type: string
            setPatientDescription:
              type: string
              nullable: true
            removePatientDescription:
              type: string
            removeAllPatientDescription:
              type: string
            setPatientObjectives:
              type: string
              nullable: true
            removePatientObjectives:
              type: string
            removeAllPatientObjectives:
              type: string
            setCustomerProfileId:
              type: string
              nullable: true
            removeCustomerProfileId:
              type: string
            removeAllCustomerProfileId:
              type: string
            setCreatedYear:
              type: string
              nullable: true
            removeCreatedYear:
              type: string
            removeAllCreatedYear:
              type: string
            setCreatedDayOfWeek:
              type: string
              nullable: true
            removeCreatedDayOfWeek:
              type: string
            removeAllCreatedDayOfWeek:
              type: string
            setCreatedMonthOfYear:
              type: string
              nullable: true
            removeCreatedMonthOfYear:
              type: string
            removeAllCreatedMonthOfYear:
              type: string
            setCreatedHourOfDay:
              type: string
              nullable: true
            removeCreatedHourOfDay:
              type: string
            removeAllCreatedHourOfDay:
              type: string
            setEnrollmentSignature1:
              type: string
              nullable: true
            removeEnrollmentSignature1:
              type: string
            removeAllEnrollmentSignature1:
              type: string
            setEnrollmentSignature2:
              type: string
              nullable: true
            removeEnrollmentSignature2:
              type: string
            removeAllEnrollmentSignature2:
              type: string
            setEnrollmentSignature3:
              type: string
              nullable: true
            removeEnrollmentSignature3:
              type: string
            removeAllEnrollmentSignature3:
              type: string
            setEnrollmentSignature4:
              type: string
              nullable: true
            removeEnrollmentSignature4:
              type: string
            removeAllEnrollmentSignature4:
              type: string
            setEnrollmentSignature5:
              type: string
              nullable: true
            removeEnrollmentSignature5:
              type: string
            removeAllEnrollmentSignature5:
              type: string
            setEnrollmentSignature6:
              type: string
              nullable: true
            removeEnrollmentSignature6:
              type: string
            removeAllEnrollmentSignature6:
              type: string
            setEnrollmentSignature7:
              type: string
              nullable: true
            removeEnrollmentSignature7:
              type: string
            removeAllEnrollmentSignature7:
              type: string
            setEnrollmentSignature8:
              type: string
              nullable: true
            removeEnrollmentSignature8:
              type: string
            removeAllEnrollmentSignature8:
              type: string
            setEnrollmentSignature9:
              type: string
              nullable: true
            removeEnrollmentSignature9:
              type: string
            removeAllEnrollmentSignature9:
              type: string
            setEnrollmentSignature10:
              type: string
              nullable: true
            removeEnrollmentSignature10:
              type: string
            removeAllEnrollmentSignature10:
              type: string
            setEnrollmentDate1:
              type: string
              nullable: true
            removeEnrollmentDate1:
              type: string
            removeAllEnrollmentDate1:
              type: string
            setEnrollmentDate2:
              type: string
              nullable: true
            removeEnrollmentDate2:
              type: string
            removeAllEnrollmentDate2:
              type: string
            setEnrollmentDate3:
              type: string
              nullable: true
            removeEnrollmentDate3:
              type: string
            removeAllEnrollmentDate3:
              type: string
            setEnrollmentDate4:
              type: string
              nullable: true
            removeEnrollmentDate4:
              type: string
            removeAllEnrollmentDate4:
              type: string
            setEnrollmentDate5:
              type: string
              nullable: true
            removeEnrollmentDate5:
              type: string
            removeAllEnrollmentDate5:
              type: string
            setEnrollmentDate6:
              type: string
              nullable: true
            removeEnrollmentDate6:
              type: string
            removeAllEnrollmentDate6:
              type: string
            setEnrollmentDate7:
              type: string
              nullable: true
            removeEnrollmentDate7:
              type: string
            removeAllEnrollmentDate7:
              type: string
            setEnrollmentDate8:
              type: string
              nullable: true
            removeEnrollmentDate8:
              type: string
            removeAllEnrollmentDate8:
              type: string
            setEnrollmentDate9:
              type: string
              nullable: true
            removeEnrollmentDate9:
              type: string
            removeAllEnrollmentDate9:
              type: string
            setEnrollmentDate10:
              type: string
              nullable: true
            removeEnrollmentDate10:
              type: string
            removeAllEnrollmentDate10:
              type: string
            setEnrollmentNumber:
              type: string
              nullable: true
            removeEnrollmentNumber:
              type: string
            removeAllEnrollmentNumber:
              type: string
            setEnrollmentCompleteName:
              type: string
              nullable: true
            removeEnrollmentCompleteName:
              type: string
            removeAllEnrollmentCompleteName:
              type: string
    PATCHPaymentsMedicalEnrollmentResponse:
      allOf:
        - type: object
          properties:
            setEnrollmentKey:
              type: string
              nullable: true
            removeEnrollmentKey:
              type: string
            removeAllEnrollmentKey:
              type: string
            setClinicKey:
              type: string
              nullable: true
            removeClinicKey:
              type: string
            removeAllClinicKey:
              type: string
            setPatientKey:
              type: string
              nullable: true
            removePatientKey:
              type: string
            removeAllPatientKey:
              type: string
            setEnrollmentFormKey:
              type: string
              nullable: true
            removeEnrollmentFormKey:
              type: string
            removeAllEnrollmentFormKey:
              type: string
            setUserKeys:
              type: array
              nullable: true
              items:
                type: string
            removeUserKeys:
              type: string
            removeAllUserKeys:
              type: array
              items:
                type: string
            addUserKeys:
              type: string
            addAllUserKeys:
              type: array
              items:
                type: string
            setMedicalSort:
              type: string
              nullable: true
            removeMedicalSort:
              type: string
            removeAllMedicalSort:
              type: string
            setClinicSort:
              type: string
              nullable: true
            removeClinicSort:
              type: string
            removeAllClinicSort:
              type: string
            setPatientFirstName:
              type: string
              nullable: true
            removePatientFirstName:
              type: string
            removeAllPatientFirstName:
              type: string
            setPatientFirstNamePreferred:
              type: string
              nullable: true
            removePatientFirstNamePreferred:
              type: string
            removeAllPatientFirstNamePreferred:
              type: string
            setPatientFamilyName:
              type: string
              nullable: true
            removePatientFamilyName:
              type: string
            removeAllPatientFamilyName:
              type: string
            setPatientCompleteName:
              type: string
              nullable: true
            removePatientCompleteName:
              type: string
            removeAllPatientCompleteName:
              type: string
            setPatientCompleteNamePreferred:
              type: string
              nullable: true
            removePatientCompleteNamePreferred:
              type: string
            removeAllPatientCompleteNamePreferred:
              type: string
            setPatientBirthDate:
              type: string
              nullable: true
            removePatientBirthDate:
              type: string
            removeAllPatientBirthDate:
              type: string
            setPatientBirthDateYear:
              type: string
              nullable: true
            removePatientBirthDateYear:
              type: string
            removeAllPatientBirthDateYear:
              type: string
            setPatientBirthDateMonthOfYear:
              type: string
              nullable: true
            removePatientBirthDateMonthOfYear:
              type: string
            removeAllPatientBirthDateMonthOfYear:
              type: string
            setPatientBirthDateDayOfWeek:
              type: string
              nullable: true
            removePatientBirthDateDayOfWeek:
              type: string
            removeAllPatientBirthDateDayOfWeek:
              type: string
            setPatientBirthMonth:
              type: string
              nullable: true
            removePatientBirthMonth:
              type: string
            removeAllPatientBirthMonth:
              type: string
            setPatientBirthDay:
              type: string
              nullable: true
            removePatientBirthDay:
              type: string
            removeAllPatientBirthDay:
              type: string
            setClinicName:
              type: string
              nullable: true
            removeClinicName:
              type: string
            removeAllClinicName:
              type: string
            setClinicCompleteName:
              type: string
              nullable: true
            removeClinicCompleteName:
              type: string
            removeAllClinicCompleteName:
              type: string
            setClinicLocation:
              type: string
              nullable: true
            removeClinicLocation:
              type: string
            removeAllClinicLocation:
              type: string
            setClinicAddress:
              type: string
              nullable: true
            removeClinicAddress:
              type: string
            removeAllClinicAddress:
              type: string
            setClinicPhoneNumber:
              type: string
              nullable: true
            removeClinicPhoneNumber:
              type: string
            removeAllClinicPhoneNumber:
              type: string
            setClinicAdministratorName:
              type: string
              nullable: true
            removeClinicAdministratorName:
              type: string
            removeAllClinicAdministratorName:
              type: string
            setEnrollmentApproved:
              type: boolean
              nullable: true
            removeEnrollmentApproved:
              type: boolean
            removeAllEnrollmentApproved:
              type: boolean
            setEnrollmentImmunizations:
              type: boolean
              nullable: true
            removeEnrollmentImmunizations:
              type: boolean
            removeAllEnrollmentImmunizations:
              type: boolean
            setFamilyAddress:
              type: string
              nullable: true
            removeFamilyAddress:
              type: string
            removeAllFamilyAddress:
              type: string
            setFamilyHowDoYouKnowTheClinic:
              type: string
              nullable: true
            removeFamilyHowDoYouKnowTheClinic:
              type: string
            removeAllFamilyHowDoYouKnowTheClinic:
              type: string
            setEnrollmentSpecialConsiderations:
              type: string
              nullable: true
            removeEnrollmentSpecialConsiderations:
              type: string
            removeAllEnrollmentSpecialConsiderations:
              type: string
            setPatientMedicalConditions:
              type: string
              nullable: true
            removePatientMedicalConditions:
              type: string
            removeAllPatientMedicalConditions:
              type: string
            setPatientPreviousClinicsAttended:
              type: string
              nullable: true
            removePatientPreviousClinicsAttended:
              type: string
            removeAllPatientPreviousClinicsAttended:
              type: string
            setPatientDescription:
              type: string
              nullable: true
            removePatientDescription:
              type: string
            removeAllPatientDescription:
              type: string
            setPatientObjectives:
              type: string
              nullable: true
            removePatientObjectives:
              type: string
            removeAllPatientObjectives:
              type: string
            setCustomerProfileId:
              type: string
              nullable: true
            removeCustomerProfileId:
              type: string
            removeAllCustomerProfileId:
              type: string
            setCreatedYear:
              type: string
              nullable: true
            removeCreatedYear:
              type: string
            removeAllCreatedYear:
              type: string
            setCreatedDayOfWeek:
              type: string
              nullable: true
            removeCreatedDayOfWeek:
              type: string
            removeAllCreatedDayOfWeek:
              type: string
            setCreatedMonthOfYear:
              type: string
              nullable: true
            removeCreatedMonthOfYear:
              type: string
            removeAllCreatedMonthOfYear:
              type: string
            setCreatedHourOfDay:
              type: string
              nullable: true
            removeCreatedHourOfDay:
              type: string
            removeAllCreatedHourOfDay:
              type: string
            setEnrollmentSignature1:
              type: string
              nullable: true
            removeEnrollmentSignature1:
              type: string
            removeAllEnrollmentSignature1:
              type: string
            setEnrollmentSignature2:
              type: string
              nullable: true
            removeEnrollmentSignature2:
              type: string
            removeAllEnrollmentSignature2:
              type: string
            setEnrollmentSignature3:
              type: string
              nullable: true
            removeEnrollmentSignature3:
              type: string
            removeAllEnrollmentSignature3:
              type: string
            setEnrollmentSignature4:
              type: string
              nullable: true
            removeEnrollmentSignature4:
              type: string
            removeAllEnrollmentSignature4:
              type: string
            setEnrollmentSignature5:
              type: string
              nullable: true
            removeEnrollmentSignature5:
              type: string
            removeAllEnrollmentSignature5:
              type: string
            setEnrollmentSignature6:
              type: string
              nullable: true
            removeEnrollmentSignature6:
              type: string
            removeAllEnrollmentSignature6:
              type: string
            setEnrollmentSignature7:
              type: string
              nullable: true
            removeEnrollmentSignature7:
              type: string
            removeAllEnrollmentSignature7:
              type: string
            setEnrollmentSignature8:
              type: string
              nullable: true
            removeEnrollmentSignature8:
              type: string
            removeAllEnrollmentSignature8:
              type: string
            setEnrollmentSignature9:
              type: string
              nullable: true
            removeEnrollmentSignature9:
              type: string
            removeAllEnrollmentSignature9:
              type: string
            setEnrollmentSignature10:
              type: string
              nullable: true
            removeEnrollmentSignature10:
              type: string
            removeAllEnrollmentSignature10:
              type: string
            setEnrollmentDate1:
              type: string
              nullable: true
            removeEnrollmentDate1:
              type: string
            removeAllEnrollmentDate1:
              type: string
            setEnrollmentDate2:
              type: string
              nullable: true
            removeEnrollmentDate2:
              type: string
            removeAllEnrollmentDate2:
              type: string
            setEnrollmentDate3:
              type: string
              nullable: true
            removeEnrollmentDate3:
              type: string
            removeAllEnrollmentDate3:
              type: string
            setEnrollmentDate4:
              type: string
              nullable: true
            removeEnrollmentDate4:
              type: string
            removeAllEnrollmentDate4:
              type: string
            setEnrollmentDate5:
              type: string
              nullable: true
            removeEnrollmentDate5:
              type: string
            removeAllEnrollmentDate5:
              type: string
            setEnrollmentDate6:
              type: string
              nullable: true
            removeEnrollmentDate6:
              type: string
            removeAllEnrollmentDate6:
              type: string
            setEnrollmentDate7:
              type: string
              nullable: true
            removeEnrollmentDate7:
              type: string
            removeAllEnrollmentDate7:
              type: string
            setEnrollmentDate8:
              type: string
              nullable: true
            removeEnrollmentDate8:
              type: string
            removeAllEnrollmentDate8:
              type: string
            setEnrollmentDate9:
              type: string
              nullable: true
            removeEnrollmentDate9:
              type: string
            removeAllEnrollmentDate9:
              type: string
            setEnrollmentDate10:
              type: string
              nullable: true
            removeEnrollmentDate10:
              type: string
            removeAllEnrollmentDate10:
              type: string
            setEnrollmentNumber:
              type: string
              nullable: true
            removeEnrollmentNumber:
              type: string
            removeAllEnrollmentNumber:
              type: string
            setEnrollmentCompleteName:
              type: string
              nullable: true
            removeEnrollmentCompleteName:
              type: string
            removeAllEnrollmentCompleteName:
              type: string
    RefreshSearchPageMedicalEnrollmentResponse:
      allOf:
        - type: string
    POSTMedicalClinicRequest:
      allOf:
        - $ref: "#/components/schemas/POSTClusterRequest"
        - type: object
          properties:
            clinicKey:
              type: string
            patientKeys:
              type: array
              items:
                type: string
            educationSort:
              type: string
            clinicSort:
              type: string
            clinicName:
              type: string
            clinicPhoneNumber:
              type: string
            clinicAdministratorName:
              type: string
            clinicEmail:
              type: string
            clinicEmailFrom:
              type: string
            clinicEmailTo:
              type: string
            clinicLocation:
              type: string
            clinicAddress:
              type: string
            enrollmentKeys:
              type: array
              items:
                type: string
            clinicShortName:
              type: string
            clinicCompleteName:
              type: string
    POSTMedicalClinicResponse:
      allOf:
        - $ref: "#/components/schemas/POSTClusterResponse"
        - type: object
          properties:
            clinicKey:
              type: string
            patientKeys:
              type: array
              items:
                type: string
            educationSort:
              type: string
            clinicSort:
              type: string
            clinicName:
              type: string
            clinicPhoneNumber:
              type: string
            clinicAdministratorName:
              type: string
            clinicEmail:
              type: string
            clinicEmailFrom:
              type: string
            clinicEmailTo:
              type: string
            clinicLocation:
              type: string
            clinicAddress:
              type: string
            enrollmentKeys:
              type: array
              items:
                type: string
            clinicShortName:
              type: string
            clinicCompleteName:
              type: string
    PATCHMedicalClinicRequest:
      allOf:
        - $ref: "#/components/schemas/PATCHClusterRequest"
        - type: object
          properties:
            setClinicKey:
              type: string
              nullable: true
            removeClinicKey:
              type: string
            removeAllClinicKey:
              type: string
            setPatientKeys:
              type: array
              nullable: true
              items:
                type: string
            removePatientKeys:
              type: string
            removeAllPatientKeys:
              type: array
              items:
                type: string
            addPatientKeys:
              type: string
            addAllPatientKeys:
              type: array
              items:
                type: string
            setEducationSort:
              type: string
              nullable: true
            removeEducationSort:
              type: string
            removeAllEducationSort:
              type: string
            setClinicSort:
              type: string
              nullable: true
            removeClinicSort:
              type: string
            removeAllClinicSort:
              type: string
            setClinicName:
              type: string
              nullable: true
            removeClinicName:
              type: string
            removeAllClinicName:
              type: string
            setClinicPhoneNumber:
              type: string
              nullable: true
            removeClinicPhoneNumber:
              type: string
            removeAllClinicPhoneNumber:
              type: string
            setClinicAdministratorName:
              type: string
              nullable: true
            removeClinicAdministratorName:
              type: string
            removeAllClinicAdministratorName:
              type: string
            setClinicEmail:
              type: string
              nullable: true
            removeClinicEmail:
              type: string
            removeAllClinicEmail:
              type: string
            setClinicEmailFrom:
              type: string
              nullable: true
            removeClinicEmailFrom:
              type: string
            removeAllClinicEmailFrom:
              type: string
            setClinicEmailTo:
              type: string
              nullable: true
            removeClinicEmailTo:
              type: string
            removeAllClinicEmailTo:
              type: string
            setClinicLocation:
              type: string
              nullable: true
            removeClinicLocation:
              type: string
            removeAllClinicLocation:
              type: string
            setClinicAddress:
              type: string
              nullable: true
            removeClinicAddress:
              type: string
            removeAllClinicAddress:
              type: string
            setEnrollmentKeys:
              type: array
              nullable: true
              items:
                type: string
            removeEnrollmentKeys:
              type: string
            removeAllEnrollmentKeys:
              type: array
              items:
                type: string
            addEnrollmentKeys:
              type: string
            addAllEnrollmentKeys:
              type: array
              items:
                type: string
            setClinicShortName:
              type: string
              nullable: true
            removeClinicShortName:
              type: string
            removeAllClinicShortName:
              type: string
            setClinicCompleteName:
              type: string
              nullable: true
            removeClinicCompleteName:
              type: string
            removeAllClinicCompleteName:
              type: string
    PATCHMedicalClinicResponse:
      allOf:
        - $ref: "#/components/schemas/PATCHClusterResponse"
        - type: object
          properties:
            setClinicKey:
              type: string
              nullable: true
            removeClinicKey:
              type: string
            removeAllClinicKey:
              type: string
            setPatientKeys:
              type: array
              nullable: true
              items:
                type: string
            removePatientKeys:
              type: string
            removeAllPatientKeys:
              type: array
              items:
                type: string
            addPatientKeys:
              type: string
            addAllPatientKeys:
              type: array
              items:
                type: string
            setEducationSort:
              type: string
              nullable: true
            removeEducationSort:
              type: string
            removeAllEducationSort:
              type: string
            setClinicSort:
              type: string
              nullable: true
            removeClinicSort:
              type: string
            removeAllClinicSort:
              type: string
            setClinicName:
              type: string
              nullable: true
            removeClinicName:
              type: string
            removeAllClinicName:
              type: string
            setClinicPhoneNumber:
              type: string
              nullable: true
            removeClinicPhoneNumber:
              type: string
            removeAllClinicPhoneNumber:
              type: string
            setClinicAdministratorName:
              type: string
              nullable: true
            removeClinicAdministratorName:
              type: string
            removeAllClinicAdministratorName:
              type: string
            setClinicEmail:
              type: string
              nullable: true
            removeClinicEmail:
              type: string
            removeAllClinicEmail:
              type: string
            setClinicEmailFrom:
              type: string
              nullable: true
            removeClinicEmailFrom:
              type: string
            removeAllClinicEmailFrom:
              type: string
            setClinicEmailTo:
              type: string
              nullable: true
            removeClinicEmailTo:
              type: string
            removeAllClinicEmailTo:
              type: string
            setClinicLocation:
              type: string
              nullable: true
            removeClinicLocation:
              type: string
            removeAllClinicLocation:
              type: string
            setClinicAddress:
              type: string
              nullable: true
            removeClinicAddress:
              type: string
            removeAllClinicAddress:
              type: string
            setEnrollmentKeys:
              type: array
              nullable: true
              items:
                type: string
            removeEnrollmentKeys:
              type: string
            removeAllEnrollmentKeys:
              type: array
              items:
                type: string
            addEnrollmentKeys:
              type: string
            addAllEnrollmentKeys:
              type: array
              items:
                type: string
            setClinicShortName:
              type: string
              nullable: true
            removeClinicShortName:
              type: string
            removeAllClinicShortName:
              type: string
            setClinicCompleteName:
              type: string
              nullable: true
            removeClinicCompleteName:
              type: string
            removeAllClinicCompleteName:
              type: string
    SearchMedicalClinicResponse:
      allOf:
        - $ref: "#/components/schemas/SearchClusterResponse"
        - type: array
          items:
            type: object
            properties:
              clinicKey:
                type: string
              patientKeys:
                type: array
                items:
                  type: string
              educationSort:
                type: string
              clinicSort:
                type: string
              clinicName:
                type: string
              clinicPhoneNumber:
                type: string
              clinicAdministratorName:
                type: string
              clinicEmail:
                type: string
              clinicEmailFrom:
                type: string
              clinicEmailTo:
                type: string
              clinicLocation:
                type: string
              clinicAddress:
                type: string
              enrollmentKeys:
                type: array
                items:
                  type: string
              clinicShortName:
                type: string
              clinicCompleteName:
                type: string
    PUTCopyMedicalClinicRequest:
      allOf:
        - $ref: "#/components/schemas/PUTCopyClusterRequest"
        - type: object
          properties:
            clinicKey:
              type: string
            patientKeys:
              type: array
              items:
                type: string
            educationSort:
              type: string
            clinicSort:
              type: string
            clinicName:
              type: string
            clinicPhoneNumber:
              type: string
            clinicAdministratorName:
              type: string
            clinicEmail:
              type: string
            clinicEmailFrom:
              type: string
            clinicEmailTo:
              type: string
            clinicLocation:
              type: string
            clinicAddress:
              type: string
            enrollmentKeys:
              type: array
              items:
                type: string
            clinicShortName:
              type: string
            clinicCompleteName:
              type: string
    PUTCopyMedicalClinicResponse:
      allOf:
        - $ref: "#/components/schemas/PUTCopyClusterResponse"
        - type: object
          properties:
            clinicKey:
              type: string
            patientKeys:
              type: array
              items:
                type: string
            educationSort:
              type: string
            clinicSort:
              type: string
            clinicName:
              type: string
            clinicPhoneNumber:
              type: string
            clinicAdministratorName:
              type: string
            clinicEmail:
              type: string
            clinicEmailFrom:
              type: string
            clinicEmailTo:
              type: string
            clinicLocation:
              type: string
            clinicAddress:
              type: string
            enrollmentKeys:
              type: array
              items:
                type: string
            clinicShortName:
              type: string
            clinicCompleteName:
              type: string
    PUTImportMedicalClinicRequest:
      allOf:
        - $ref: "#/components/schemas/PUTImportClusterRequest"
        - type: object
          properties:
            clinicKey:
              type: string
            patientKeys:
              type: array
              items:
                type: string
            educationSort:
              type: string
            clinicSort:
              type: string
            clinicName:
              type: string
            clinicPhoneNumber:
              type: string
            clinicAdministratorName:
              type: string
            clinicEmail:
              type: string
            clinicEmailFrom:
              type: string
            clinicEmailTo:
              type: string
            clinicLocation:
              type: string
            clinicAddress:
              type: string
            enrollmentKeys:
              type: array
              items:
                type: string
            clinicShortName:
              type: string
            clinicCompleteName:
              type: string
    PUTImportMedicalClinicResponse:
      allOf:
        - $ref: "#/components/schemas/PUTImportClusterResponse"
        - type: object
          properties:
            clinicKey:
              type: string
            patientKeys:
              type: array
              items:
                type: string
            educationSort:
              type: string
            clinicSort:
              type: string
            clinicName:
              type: string
            clinicPhoneNumber:
              type: string
            clinicAdministratorName:
              type: string
            clinicEmail:
              type: string
            clinicEmailFrom:
              type: string
            clinicEmailTo:
              type: string
            clinicLocation:
              type: string
            clinicAddress:
              type: string
            enrollmentKeys:
              type: array
              items:
                type: string
            clinicShortName:
              type: string
            clinicCompleteName:
              type: string
    PUTMergeMedicalClinicRequest:
      allOf:
        - $ref: "#/components/schemas/PUTMergeClusterRequest"
        - type: object
          properties:
            clinicKey:
              type: string
            patientKeys:
              type: array
              items:
                type: string
            educationSort:
              type: string
            clinicSort:
              type: string
            clinicName:
              type: string
            clinicPhoneNumber:
              type: string
            clinicAdministratorName:
              type: string
            clinicEmail:
              type: string
            clinicEmailFrom:
              type: string
            clinicEmailTo:
              type: string
            clinicLocation:
              type: string
            clinicAddress:
              type: string
            enrollmentKeys:
              type: array
              items:
                type: string
            clinicShortName:
              type: string
            clinicCompleteName:
              type: string
    PUTMergeMedicalClinicResponse:
      allOf:
        - $ref: "#/components/schemas/PUTMergeClusterResponse"
        - type: object
          properties:
            clinicKey:
              type: string
            patientKeys:
              type: array
              items:
                type: string
            educationSort:
              type: string
            clinicSort:
              type: string
            clinicName:
              type: string
            clinicPhoneNumber:
              type: string
            clinicAdministratorName:
              type: string
            clinicEmail:
              type: string
            clinicEmailFrom:
              type: string
            clinicEmailTo:
              type: string
            clinicLocation:
              type: string
            clinicAddress:
              type: string
            enrollmentKeys:
              type: array
              items:
                type: string
            clinicShortName:
              type: string
            clinicCompleteName:
              type: string
    GETMedicalClinicResponse:
      allOf:
        - $ref: "#/components/schemas/GETClusterResponse"
        - type: object
          properties:
            clinicKey:
              type: string
            patientKeys:
              type: array
              items:
                type: string
            educationSort:
              type: string
            clinicSort:
              type: string
            clinicName:
              type: string
            clinicPhoneNumber:
              type: string
            clinicAdministratorName:
              type: string
            clinicEmail:
              type: string
            clinicEmailFrom:
              type: string
            clinicEmailTo:
              type: string
            clinicLocation:
              type: string
            clinicAddress:
              type: string
            enrollmentKeys:
              type: array
              items:
                type: string
            clinicShortName:
              type: string
            clinicCompleteName:
              type: string
    SearchPageMedicalClinicResponse:
      allOf:
        - type: string
    POSTHtmlPartRequest:
      allOf:
        - $ref: "#/components/schemas/POSTClusterRequest"
        - type: object
          properties:
            htmlPartKey:
              type: string
            pageDesignKeys:
              type: array
              items:
                type: string
            htmlLink:
              type: string
            htmlElement:
              type: string
            htmlId:
              type: string
            htmlClasses:
              type: string
            htmlStyle:
              type: string
            htmlBefore:
              type: string
            htmlAfter:
              type: string
            htmlText:
              type: string
            htmlVar:
              type: string
            htmlVarSpan:
              type: string
            htmlVarForm:
              type: string
            htmlVarInput:
              type: string
            htmlVarForEach:
              type: string
            htmlExclude:
              type: boolean
            pdfExclude:
              type: boolean
            loginLogout:
              type: boolean
            sort1:
              type: string
            sort2:
              type: string
            sort3:
              type: string
            sort4:
              type: string
            sort5:
              type: string
            sort6:
              type: string
            sort7:
              type: string
            sort8:
              type: string
            sort9:
              type: string
            sort10:
              type: string
    POSTHtmlPartResponse:
      allOf:
        - $ref: "#/components/schemas/POSTClusterResponse"
        - type: object
          properties:
            htmlPartKey:
              type: string
            pageDesignKeys:
              type: array
              items:
                type: string
            htmlLink:
              type: string
            htmlElement:
              type: string
            htmlId:
              type: string
            htmlClasses:
              type: string
            htmlStyle:
              type: string
            htmlBefore:
              type: string
            htmlAfter:
              type: string
            htmlText:
              type: string
            htmlVar:
              type: string
            htmlVarSpan:
              type: string
            htmlVarForm:
              type: string
            htmlVarInput:
              type: string
            htmlVarForEach:
              type: string
            htmlExclude:
              type: boolean
            pdfExclude:
              type: boolean
            loginLogout:
              type: boolean
            sort1:
              type: string
            sort2:
              type: string
            sort3:
              type: string
            sort4:
              type: string
            sort5:
              type: string
            sort6:
              type: string
            sort7:
              type: string
            sort8:
              type: string
            sort9:
              type: string
            sort10:
              type: string
    PATCHHtmlPartRequest:
      allOf:
        - $ref: "#/components/schemas/PATCHClusterRequest"
        - type: object
          properties:
            setHtmlPartKey:
              type: string
              nullable: true
            removeHtmlPartKey:
              type: string
            removeAllHtmlPartKey:
              type: string
            setPageDesignKeys:
              type: array
              nullable: true
              items:
                type: string
            removePageDesignKeys:
              type: string
            removeAllPageDesignKeys:
              type: array
              items:
                type: string
            addPageDesignKeys:
              type: string
            addAllPageDesignKeys:
              type: array
              items:
                type: string
            setHtmlLink:
              type: string
              nullable: true
            removeHtmlLink:
              type: string
            removeAllHtmlLink:
              type: string
            setHtmlElement:
              type: string
              nullable: true
            removeHtmlElement:
              type: string
            removeAllHtmlElement:
              type: string
            setHtmlId:
              type: string
              nullable: true
            removeHtmlId:
              type: string
            removeAllHtmlId:
              type: string
            setHtmlClasses:
              type: string
              nullable: true
            removeHtmlClasses:
              type: string
            removeAllHtmlClasses:
              type: string
            setHtmlStyle:
              type: string
              nullable: true
            removeHtmlStyle:
              type: string
            removeAllHtmlStyle:
              type: string
            setHtmlBefore:
              type: string
              nullable: true
            removeHtmlBefore:
              type: string
            removeAllHtmlBefore:
              type: string
            setHtmlAfter:
              type: string
              nullable: true
            removeHtmlAfter:
              type: string
            removeAllHtmlAfter:
              type: string
            setHtmlText:
              type: string
              nullable: true
            removeHtmlText:
              type: string
            removeAllHtmlText:
              type: string
            setHtmlVar:
              type: string
              nullable: true
            removeHtmlVar:
              type: string
            removeAllHtmlVar:
              type: string
            setHtmlVarSpan:
              type: string
              nullable: true
            removeHtmlVarSpan:
              type: string
            removeAllHtmlVarSpan:
              type: string
            setHtmlVarForm:
              type: string
              nullable: true
            removeHtmlVarForm:
              type: string
            removeAllHtmlVarForm:
              type: string
            setHtmlVarInput:
              type: string
              nullable: true
            removeHtmlVarInput:
              type: string
            removeAllHtmlVarInput:
              type: string
            setHtmlVarForEach:
              type: string
              nullable: true
            removeHtmlVarForEach:
              type: string
            removeAllHtmlVarForEach:
              type: string
            setHtmlExclude:
              type: boolean
              nullable: true
            removeHtmlExclude:
              type: boolean
            removeAllHtmlExclude:
              type: boolean
            setPdfExclude:
              type: boolean
              nullable: true
            removePdfExclude:
              type: boolean
            removeAllPdfExclude:
              type: boolean
            setLoginLogout:
              type: boolean
              nullable: true
            removeLoginLogout:
              type: boolean
            removeAllLoginLogout:
              type: boolean
            setSort1:
              type: string
              nullable: true
            removeSort1:
              type: string
            removeAllSort1:
              type: string
            setSort2:
              type: string
              nullable: true
            removeSort2:
              type: string
            removeAllSort2:
              type: string
            setSort3:
              type: string
              nullable: true
            removeSort3:
              type: string
            removeAllSort3:
              type: string
            setSort4:
              type: string
              nullable: true
            removeSort4:
              type: string
            removeAllSort4:
              type: string
            setSort5:
              type: string
              nullable: true
            removeSort5:
              type: string
            removeAllSort5:
              type: string
            setSort6:
              type: string
              nullable: true
            removeSort6:
              type: string
            removeAllSort6:
              type: string
            setSort7:
              type: string
              nullable: true
            removeSort7:
              type: string
            removeAllSort7:
              type: string
            setSort8:
              type: string
              nullable: true
            removeSort8:
              type: string
            removeAllSort8:
              type: string
            setSort9:
              type: string
              nullable: true
            removeSort9:
              type: string
            removeAllSort9:
              type: string
            setSort10:
              type: string
              nullable: true
            removeSort10:
              type: string
            removeAllSort10:
              type: string
    PATCHHtmlPartResponse:
      allOf:
        - $ref: "#/components/schemas/PATCHClusterResponse"
        - type: object
          properties:
            setHtmlPartKey:
              type: string
              nullable: true
            removeHtmlPartKey:
              type: string
            removeAllHtmlPartKey:
              type: string
            setPageDesignKeys:
              type: array
              nullable: true
              items:
                type: string
            removePageDesignKeys:
              type: string
            removeAllPageDesignKeys:
              type: array
              items:
                type: string
            addPageDesignKeys:
              type: string
            addAllPageDesignKeys:
              type: array
              items:
                type: string
            setHtmlLink:
              type: string
              nullable: true
            removeHtmlLink:
              type: string
            removeAllHtmlLink:
              type: string
            setHtmlElement:
              type: string
              nullable: true
            removeHtmlElement:
              type: string
            removeAllHtmlElement:
              type: string
            setHtmlId:
              type: string
              nullable: true
            removeHtmlId:
              type: string
            removeAllHtmlId:
              type: string
            setHtmlClasses:
              type: string
              nullable: true
            removeHtmlClasses:
              type: string
            removeAllHtmlClasses:
              type: string
            setHtmlStyle:
              type: string
              nullable: true
            removeHtmlStyle:
              type: string
            removeAllHtmlStyle:
              type: string
            setHtmlBefore:
              type: string
              nullable: true
            removeHtmlBefore:
              type: string
            removeAllHtmlBefore:
              type: string
            setHtmlAfter:
              type: string
              nullable: true
            removeHtmlAfter:
              type: string
            removeAllHtmlAfter:
              type: string
            setHtmlText:
              type: string
              nullable: true
            removeHtmlText:
              type: string
            removeAllHtmlText:
              type: string
            setHtmlVar:
              type: string
              nullable: true
            removeHtmlVar:
              type: string
            removeAllHtmlVar:
              type: string
            setHtmlVarSpan:
              type: string
              nullable: true
            removeHtmlVarSpan:
              type: string
            removeAllHtmlVarSpan:
              type: string
            setHtmlVarForm:
              type: string
              nullable: true
            removeHtmlVarForm:
              type: string
            removeAllHtmlVarForm:
              type: string
            setHtmlVarInput:
              type: string
              nullable: true
            removeHtmlVarInput:
              type: string
            removeAllHtmlVarInput:
              type: string
            setHtmlVarForEach:
              type: string
              nullable: true
            removeHtmlVarForEach:
              type: string
            removeAllHtmlVarForEach:
              type: string
            setHtmlExclude:
              type: boolean
              nullable: true
            removeHtmlExclude:
              type: boolean
            removeAllHtmlExclude:
              type: boolean
            setPdfExclude:
              type: boolean
              nullable: true
            removePdfExclude:
              type: boolean
            removeAllPdfExclude:
              type: boolean
            setLoginLogout:
              type: boolean
              nullable: true
            removeLoginLogout:
              type: boolean
            removeAllLoginLogout:
              type: boolean
            setSort1:
              type: string
              nullable: true
            removeSort1:
              type: string
            removeAllSort1:
              type: string
            setSort2:
              type: string
              nullable: true
            removeSort2:
              type: string
            removeAllSort2:
              type: string
            setSort3:
              type: string
              nullable: true
            removeSort3:
              type: string
            removeAllSort3:
              type: string
            setSort4:
              type: string
              nullable: true
            removeSort4:
              type: string
            removeAllSort4:
              type: string
            setSort5:
              type: string
              nullable: true
            removeSort5:
              type: string
            removeAllSort5:
              type: string
            setSort6:
              type: string
              nullable: true
            removeSort6:
              type: string
            removeAllSort6:
              type: string
            setSort7:
              type: string
              nullable: true
            removeSort7:
              type: string
            removeAllSort7:
              type: string
            setSort8:
              type: string
              nullable: true
            removeSort8:
              type: string
            removeAllSort8:
              type: string
            setSort9:
              type: string
              nullable: true
            removeSort9:
              type: string
            removeAllSort9:
              type: string
            setSort10:
              type: string
              nullable: true
            removeSort10:
              type: string
            removeAllSort10:
              type: string
    SearchHtmlPartResponse:
      allOf:
        - $ref: "#/components/schemas/SearchClusterResponse"
        - type: array
          items:
            type: object
            properties:
              htmlPartKey:
                type: string
              pageDesignKeys:
                type: array
                items:
                  type: string
              htmlLink:
                type: string
              htmlElement:
                type: string
              htmlId:
                type: string
              htmlClasses:
                type: string
              htmlStyle:
                type: string
              htmlBefore:
                type: string
              htmlAfter:
                type: string
              htmlText:
                type: string
              htmlVar:
                type: string
              htmlVarSpan:
                type: string
              htmlVarForm:
                type: string
              htmlVarInput:
                type: string
              htmlVarForEach:
                type: string
              htmlExclude:
                type: boolean
              pdfExclude:
                type: boolean
              loginLogout:
                type: boolean
              sort1:
                type: string
              sort2:
                type: string
              sort3:
                type: string
              sort4:
                type: string
              sort5:
                type: string
              sort6:
                type: string
              sort7:
                type: string
              sort8:
                type: string
              sort9:
                type: string
              sort10:
                type: string
    PUTCopyHtmlPartRequest:
      allOf:
        - $ref: "#/components/schemas/PUTCopyClusterRequest"
        - type: object
          properties:
            htmlPartKey:
              type: string
            pageDesignKeys:
              type: array
              items:
                type: string
            htmlLink:
              type: string
            htmlElement:
              type: string
            htmlId:
              type: string
            htmlClasses:
              type: string
            htmlStyle:
              type: string
            htmlBefore:
              type: string
            htmlAfter:
              type: string
            htmlText:
              type: string
            htmlVar:
              type: string
            htmlVarSpan:
              type: string
            htmlVarForm:
              type: string
            htmlVarInput:
              type: string
            htmlVarForEach:
              type: string
            htmlExclude:
              type: boolean
            pdfExclude:
              type: boolean
            loginLogout:
              type: boolean
            sort1:
              type: string
            sort2:
              type: string
            sort3:
              type: string
            sort4:
              type: string
            sort5:
              type: string
            sort6:
              type: string
            sort7:
              type: string
            sort8:
              type: string
            sort9:
              type: string
            sort10:
              type: string
    PUTCopyHtmlPartResponse:
      allOf:
        - $ref: "#/components/schemas/PUTCopyClusterResponse"
        - type: object
          properties:
            htmlPartKey:
              type: string
            pageDesignKeys:
              type: array
              items:
                type: string
            htmlLink:
              type: string
            htmlElement:
              type: string
            htmlId:
              type: string
            htmlClasses:
              type: string
            htmlStyle:
              type: string
            htmlBefore:
              type: string
            htmlAfter:
              type: string
            htmlText:
              type: string
            htmlVar:
              type: string
            htmlVarSpan:
              type: string
            htmlVarForm:
              type: string
            htmlVarInput:
              type: string
            htmlVarForEach:
              type: string
            htmlExclude:
              type: boolean
            pdfExclude:
              type: boolean
            loginLogout:
              type: boolean
            sort1:
              type: string
            sort2:
              type: string
            sort3:
              type: string
            sort4:
              type: string
            sort5:
              type: string
            sort6:
              type: string
            sort7:
              type: string
            sort8:
              type: string
            sort9:
              type: string
            sort10:
              type: string
    PUTImportHtmlPartRequest:
      allOf:
        - $ref: "#/components/schemas/PUTImportClusterRequest"
        - type: object
          properties:
            htmlPartKey:
              type: string
            pageDesignKeys:
              type: array
              items:
                type: string
            htmlLink:
              type: string
            htmlElement:
              type: string
            htmlId:
              type: string
            htmlClasses:
              type: string
            htmlStyle:
              type: string
            htmlBefore:
              type: string
            htmlAfter:
              type: string
            htmlText:
              type: string
            htmlVar:
              type: string
            htmlVarSpan:
              type: string
            htmlVarForm:
              type: string
            htmlVarInput:
              type: string
            htmlVarForEach:
              type: string
            htmlExclude:
              type: boolean
            pdfExclude:
              type: boolean
            loginLogout:
              type: boolean
            sort1:
              type: string
            sort2:
              type: string
            sort3:
              type: string
            sort4:
              type: string
            sort5:
              type: string
            sort6:
              type: string
            sort7:
              type: string
            sort8:
              type: string
            sort9:
              type: string
            sort10:
              type: string
    PUTImportHtmlPartResponse:
      allOf:
        - $ref: "#/components/schemas/PUTImportClusterResponse"
        - type: object
          properties:
            htmlPartKey:
              type: string
            pageDesignKeys:
              type: array
              items:
                type: string
            htmlLink:
              type: string
            htmlElement:
              type: string
            htmlId:
              type: string
            htmlClasses:
              type: string
            htmlStyle:
              type: string
            htmlBefore:
              type: string
            htmlAfter:
              type: string
            htmlText:
              type: string
            htmlVar:
              type: string
            htmlVarSpan:
              type: string
            htmlVarForm:
              type: string
            htmlVarInput:
              type: string
            htmlVarForEach:
              type: string
            htmlExclude:
              type: boolean
            pdfExclude:
              type: boolean
            loginLogout:
              type: boolean
            sort1:
              type: string
            sort2:
              type: string
            sort3:
              type: string
            sort4:
              type: string
            sort5:
              type: string
            sort6:
              type: string
            sort7:
              type: string
            sort8:
              type: string
            sort9:
              type: string
            sort10:
              type: string
    PUTMergeHtmlPartRequest:
      allOf:
        - $ref: "#/components/schemas/PUTMergeClusterRequest"
        - type: object
          properties:
            htmlPartKey:
              type: string
            pageDesignKeys:
              type: array
              items:
                type: string
            htmlLink:
              type: string
            htmlElement:
              type: string
            htmlId:
              type: string
            htmlClasses:
              type: string
            htmlStyle:
              type: string
            htmlBefore:
              type: string
            htmlAfter:
              type: string
            htmlText:
              type: string
            htmlVar:
              type: string
            htmlVarSpan:
              type: string
            htmlVarForm:
              type: string
            htmlVarInput:
              type: string
            htmlVarForEach:
              type: string
            htmlExclude:
              type: boolean
            pdfExclude:
              type: boolean
            loginLogout:
              type: boolean
            sort1:
              type: string
            sort2:
              type: string
            sort3:
              type: string
            sort4:
              type: string
            sort5:
              type: string
            sort6:
              type: string
            sort7:
              type: string
            sort8:
              type: string
            sort9:
              type: string
            sort10:
              type: string
    PUTMergeHtmlPartResponse:
      allOf:
        - $ref: "#/components/schemas/PUTMergeClusterResponse"
        - type: object
          properties:
            htmlPartKey:
              type: string
            pageDesignKeys:
              type: array
              items:
                type: string
            htmlLink:
              type: string
            htmlElement:
              type: string
            htmlId:
              type: string
            htmlClasses:
              type: string
            htmlStyle:
              type: string
            htmlBefore:
              type: string
            htmlAfter:
              type: string
            htmlText:
              type: string
            htmlVar:
              type: string
            htmlVarSpan:
              type: string
            htmlVarForm:
              type: string
            htmlVarInput:
              type: string
            htmlVarForEach:
              type: string
            htmlExclude:
              type: boolean
            pdfExclude:
              type: boolean
            loginLogout:
              type: boolean
            sort1:
              type: string
            sort2:
              type: string
            sort3:
              type: string
            sort4:
              type: string
            sort5:
              type: string
            sort6:
              type: string
            sort7:
              type: string
            sort8:
              type: string
            sort9:
              type: string
            sort10:
              type: string
    GETHtmlPartResponse:
      allOf:
        - $ref: "#/components/schemas/GETClusterResponse"
        - type: object
          properties:
            htmlPartKey:
              type: string
            pageDesignKeys:
              type: array
              items:
                type: string
            htmlLink:
              type: string
            htmlElement:
              type: string
            htmlId:
              type: string
            htmlClasses:
              type: string
            htmlStyle:
              type: string
            htmlBefore:
              type: string
            htmlAfter:
              type: string
            htmlText:
              type: string
            htmlVar:
              type: string
            htmlVarSpan:
              type: string
            htmlVarForm:
              type: string
            htmlVarInput:
              type: string
            htmlVarForEach:
              type: string
            htmlExclude:
              type: boolean
            pdfExclude:
              type: boolean
            loginLogout:
              type: boolean
            sort1:
              type: string
            sort2:
              type: string
            sort3:
              type: string
            sort4:
              type: string
            sort5:
              type: string
            sort6:
              type: string
            sort7:
              type: string
            sort8:
              type: string
            sort9:
              type: string
            sort10:
              type: string
    SearchPageHtmlPartResponse:
      allOf:
        - type: string
    SearchSiteUserResponse:
      allOf:
        - $ref: "#/components/schemas/SearchClusterResponse"
        - type: array
          items:
            type: object
            properties:
              userKeys:
                type: array
                items:
                  type: string
              enrollmentKeys:
                type: array
                items:
                  type: string
              userName:
                type: string
              userEmail:
                type: string
              userFirstName:
                type: string
              userLastName:
                type: string
              userFullName:
                type: string
              userSite:
                type: string
              customerProfileId:
                type: string
              userReceiveEmails:
                type: boolean
              seeArchived:
                type: boolean
              seeDeleted:
                type: boolean
    PATCHSiteUserRequest:
      allOf:
        - $ref: "#/components/schemas/PATCHClusterRequest"
        - type: object
          properties:
            setUserKeys:
              type: array
              nullable: true
              items:
                type: string
            removeUserKeys:
              type: string
            removeAllUserKeys:
              type: array
              items:
                type: string
            addUserKeys:
              type: string
            addAllUserKeys:
              type: array
              items:
                type: string
            setEnrollmentKeys:
              type: array
              nullable: true
              items:
                type: string
            removeEnrollmentKeys:
              type: string
            removeAllEnrollmentKeys:
              type: array
              items:
                type: string
            addEnrollmentKeys:
              type: string
            addAllEnrollmentKeys:
              type: array
              items:
                type: string
            setUserName:
              type: string
              nullable: true
            removeUserName:
              type: string
            removeAllUserName:
              type: string
            setUserEmail:
              type: string
              nullable: true
            removeUserEmail:
              type: string
            removeAllUserEmail:
              type: string
            setUserFirstName:
              type: string
              nullable: true
            removeUserFirstName:
              type: string
            removeAllUserFirstName:
              type: string
            setUserLastName:
              type: string
              nullable: true
            removeUserLastName:
              type: string
            removeAllUserLastName:
              type: string
            setUserFullName:
              type: string
              nullable: true
            removeUserFullName:
              type: string
            removeAllUserFullName:
              type: string
            setUserSite:
              type: string
              nullable: true
            removeUserSite:
              type: string
            removeAllUserSite:
              type: string
            setCustomerProfileId:
              type: string
              nullable: true
            removeCustomerProfileId:
              type: string
            removeAllCustomerProfileId:
              type: string
            setUserReceiveEmails:
              type: boolean
              nullable: true
            removeUserReceiveEmails:
              type: boolean
            removeAllUserReceiveEmails:
              type: boolean
            setSeeArchived:
              type: boolean
              nullable: true
            removeSeeArchived:
              type: boolean
            removeAllSeeArchived:
              type: boolean
            setSeeDeleted:
              type: boolean
              nullable: true
            removeSeeDeleted:
              type: boolean
            removeAllSeeDeleted:
              type: boolean
    PATCHSiteUserResponse:
      allOf:
        - $ref: "#/components/schemas/PATCHClusterResponse"
        - type: object
          properties:
            setUserKeys:
              type: array
              nullable: true
              items:
                type: string
            removeUserKeys:
              type: string
            removeAllUserKeys:
              type: array
              items:
                type: string
            addUserKeys:
              type: string
            addAllUserKeys:
              type: array
              items:
                type: string
            setEnrollmentKeys:
              type: array
              nullable: true
              items:
                type: string
            removeEnrollmentKeys:
              type: string
            removeAllEnrollmentKeys:
              type: array
              items:
                type: string
            addEnrollmentKeys:
              type: string
            addAllEnrollmentKeys:
              type: array
              items:
                type: string
            setUserName:
              type: string
              nullable: true
            removeUserName:
              type: string
            removeAllUserName:
              type: string
            setUserEmail:
              type: string
              nullable: true
            removeUserEmail:
              type: string
            removeAllUserEmail:
              type: string
            setUserFirstName:
              type: string
              nullable: true
            removeUserFirstName:
              type: string
            removeAllUserFirstName:
              type: string
            setUserLastName:
              type: string
              nullable: true
            removeUserLastName:
              type: string
            removeAllUserLastName:
              type: string
            setUserFullName:
              type: string
              nullable: true
            removeUserFullName:
              type: string
            removeAllUserFullName:
              type: string
            setUserSite:
              type: string
              nullable: true
            removeUserSite:
              type: string
            removeAllUserSite:
              type: string
            setCustomerProfileId:
              type: string
              nullable: true
            removeCustomerProfileId:
              type: string
            removeAllCustomerProfileId:
              type: string
            setUserReceiveEmails:
              type: boolean
              nullable: true
            removeUserReceiveEmails:
              type: boolean
            removeAllUserReceiveEmails:
              type: boolean
            setSeeArchived:
              type: boolean
              nullable: true
            removeSeeArchived:
              type: boolean
            removeAllSeeArchived:
              type: boolean
            setSeeDeleted:
              type: boolean
              nullable: true
            removeSeeDeleted:
              type: boolean
            removeAllSeeDeleted:
              type: boolean
    POSTSiteUserRequest:
      allOf:
        - $ref: "#/components/schemas/POSTClusterRequest"
        - type: object
          properties:
            userKeys:
              type: array
              items:
                type: string
            enrollmentKeys:
              type: array
              items:
                type: string
            userName:
              type: string
            userEmail:
              type: string
            userFirstName:
              type: string
            userLastName:
              type: string
            userFullName:
              type: string
            userSite:
              type: string
            customerProfileId:
              type: string
            userReceiveEmails:
              type: boolean
            seeArchived:
              type: boolean
            seeDeleted:
              type: boolean
    POSTSiteUserResponse:
      allOf:
        - $ref: "#/components/schemas/POSTClusterResponse"
        - type: object
          properties:
            userKeys:
              type: array
              items:
                type: string
            enrollmentKeys:
              type: array
              items:
                type: string
            userName:
              type: string
            userEmail:
              type: string
            userFirstName:
              type: string
            userLastName:
              type: string
            userFullName:
              type: string
            userSite:
              type: string
            customerProfileId:
              type: string
            userReceiveEmails:
              type: boolean
            seeArchived:
              type: boolean
            seeDeleted:
              type: boolean
    SearchPageSiteUserResponse:
      allOf:
        - type: string
    POSTClusterRequest:
      allOf:
        - type: object
          properties:
            pk:
              type: string
            inheritPk:
              type: string
            id:
              type: string
            created:
              type: string
            modified:
              type: string
            archived:
              type: boolean
            deleted:
              type: boolean
            classCanonicalName:
              type: string
            classSimpleName:
              type: string
            classCanonicalNames:
              type: array
              items:
                type: string
            sessionId:
              type: string
            userId:
              type: string
            userKey:
              type: string
            saves:
              type: array
              items:
                type: string
            objectTitle:
              type: string
            objectId:
              type: string
            objectNameVar:
              type: string
            objectSuggest:
              type: string
            objectText:
              type: string
            pageUrlId:
              type: string
            pageUrlPk:
              type: string
            pageUrlApi:
              type: string
            pageH1:
              type: string
    POSTClusterResponse:
      allOf:
        - type: object
          properties:
            pk:
              type: string
            inheritPk:
              type: string
            id:
              type: string
            created:
              type: string
            modified:
              type: string
            archived:
              type: boolean
            deleted:
              type: boolean
            classCanonicalName:
              type: string
            classSimpleName:
              type: string
            classCanonicalNames:
              type: array
              items:
                type: string
            sessionId:
              type: string
            userId:
              type: string
            userKey:
              type: string
            saves:
              type: array
              items:
                type: string
            objectTitle:
              type: string
            objectId:
              type: string
            objectNameVar:
              type: string
            objectSuggest:
              type: string
            objectText:
              type: string
            pageUrlId:
              type: string
            pageUrlPk:
              type: string
            pageUrlApi:
              type: string
            pageH1:
              type: string
    PATCHClusterRequest:
      allOf:
        - type: object
          properties:
            setPk:
              type: string
              nullable: true
            removePk:
              type: string
            removeAllPk:
              type: string
            setInheritPk:
              type: string
              nullable: true
            removeInheritPk:
              type: string
            removeAllInheritPk:
              type: string
            setId:
              type: string
              nullable: true
            removeId:
              type: string
            removeAllId:
              type: string
            setCreated:
              type: string
              nullable: true
            removeCreated:
              type: string
            removeAllCreated:
              type: string
            setModified:
              type: string
              nullable: true
            removeModified:
              type: string
            removeAllModified:
              type: string
            setArchived:
              type: boolean
              nullable: true
            removeArchived:
              type: boolean
            removeAllArchived:
              type: boolean
            setDeleted:
              type: boolean
              nullable: true
            removeDeleted:
              type: boolean
            removeAllDeleted:
              type: boolean
            setClassCanonicalName:
              type: string
              nullable: true
            removeClassCanonicalName:
              type: string
            removeAllClassCanonicalName:
              type: string
            setClassSimpleName:
              type: string
              nullable: true
            removeClassSimpleName:
              type: string
            removeAllClassSimpleName:
              type: string
            setClassCanonicalNames:
              type: array
              nullable: true
              items:
                type: string
            removeClassCanonicalNames:
              type: string
            removeAllClassCanonicalNames:
              type: array
              items:
                type: string
            addClassCanonicalNames:
              type: string
            addAllClassCanonicalNames:
              type: array
              items:
                type: string
            setSessionId:
              type: string
              nullable: true
            removeSessionId:
              type: string
            removeAllSessionId:
              type: string
            setUserId:
              type: string
              nullable: true
            removeUserId:
              type: string
            removeAllUserId:
              type: string
            setUserKey:
              type: string
              nullable: true
            removeUserKey:
              type: string
            removeAllUserKey:
              type: string
            setSaves:
              type: array
              nullable: true
              items:
                type: string
            removeSaves:
              type: string
            removeAllSaves:
              type: array
              items:
                type: string
            addSaves:
              type: string
            addAllSaves:
              type: array
              items:
                type: string
            setObjectTitle:
              type: string
              nullable: true
            removeObjectTitle:
              type: string
            removeAllObjectTitle:
              type: string
            setObjectId:
              type: string
              nullable: true
            removeObjectId:
              type: string
            removeAllObjectId:
              type: string
            setObjectNameVar:
              type: string
              nullable: true
            removeObjectNameVar:
              type: string
            removeAllObjectNameVar:
              type: string
            setObjectSuggest:
              type: string
              nullable: true
            removeObjectSuggest:
              type: string
            removeAllObjectSuggest:
              type: string
            setObjectText:
              type: string
              nullable: true
            removeObjectText:
              type: string
            removeAllObjectText:
              type: string
            setPageUrlId:
              type: string
              nullable: true
            removePageUrlId:
              type: string
            removeAllPageUrlId:
              type: string
            setPageUrlPk:
              type: string
              nullable: true
            removePageUrlPk:
              type: string
            removeAllPageUrlPk:
              type: string
            setPageUrlApi:
              type: string
              nullable: true
            removePageUrlApi:
              type: string
            removeAllPageUrlApi:
              type: string
            setPageH1:
              type: string
              nullable: true
            removePageH1:
              type: string
            removeAllPageH1:
              type: string
    PATCHClusterResponse:
      allOf:
        - type: object
          properties:
            setPk:
              type: string
              nullable: true
            removePk:
              type: string
            removeAllPk:
              type: string
            setInheritPk:
              type: string
              nullable: true
            removeInheritPk:
              type: string
            removeAllInheritPk:
              type: string
            setId:
              type: string
              nullable: true
            removeId:
              type: string
            removeAllId:
              type: string
            setCreated:
              type: string
              nullable: true
            removeCreated:
              type: string
            removeAllCreated:
              type: string
            setModified:
              type: string
              nullable: true
            removeModified:
              type: string
            removeAllModified:
              type: string
            setArchived:
              type: boolean
              nullable: true
            removeArchived:
              type: boolean
            removeAllArchived:
              type: boolean
            setDeleted:
              type: boolean
              nullable: true
            removeDeleted:
              type: boolean
            removeAllDeleted:
              type: boolean
            setClassCanonicalName:
              type: string
              nullable: true
            removeClassCanonicalName:
              type: string
            removeAllClassCanonicalName:
              type: string
            setClassSimpleName:
              type: string
              nullable: true
            removeClassSimpleName:
              type: string
            removeAllClassSimpleName:
              type: string
            setClassCanonicalNames:
              type: array
              nullable: true
              items:
                type: string
            removeClassCanonicalNames:
              type: string
            removeAllClassCanonicalNames:
              type: array
              items:
                type: string
            addClassCanonicalNames:
              type: string
            addAllClassCanonicalNames:
              type: array
              items:
                type: string
            setSessionId:
              type: string
              nullable: true
            removeSessionId:
              type: string
            removeAllSessionId:
              type: string
            setUserId:
              type: string
              nullable: true
            removeUserId:
              type: string
            removeAllUserId:
              type: string
            setUserKey:
              type: string
              nullable: true
            removeUserKey:
              type: string
            removeAllUserKey:
              type: string
            setSaves:
              type: array
              nullable: true
              items:
                type: string
            removeSaves:
              type: string
            removeAllSaves:
              type: array
              items:
                type: string
            addSaves:
              type: string
            addAllSaves:
              type: array
              items:
                type: string
            setObjectTitle:
              type: string
              nullable: true
            removeObjectTitle:
              type: string
            removeAllObjectTitle:
              type: string
            setObjectId:
              type: string
              nullable: true
            removeObjectId:
              type: string
            removeAllObjectId:
              type: string
            setObjectNameVar:
              type: string
              nullable: true
            removeObjectNameVar:
              type: string
            removeAllObjectNameVar:
              type: string
            setObjectSuggest:
              type: string
              nullable: true
            removeObjectSuggest:
              type: string
            removeAllObjectSuggest:
              type: string
            setObjectText:
              type: string
              nullable: true
            removeObjectText:
              type: string
            removeAllObjectText:
              type: string
            setPageUrlId:
              type: string
              nullable: true
            removePageUrlId:
              type: string
            removeAllPageUrlId:
              type: string
            setPageUrlPk:
              type: string
              nullable: true
            removePageUrlPk:
              type: string
            removeAllPageUrlPk:
              type: string
            setPageUrlApi:
              type: string
              nullable: true
            removePageUrlApi:
              type: string
            removeAllPageUrlApi:
              type: string
            setPageH1:
              type: string
              nullable: true
            removePageH1:
              type: string
            removeAllPageH1:
              type: string
    SearchClusterResponse:
      allOf:
        - type: array
          items:
            type: object
            properties:
              pk:
                type: string
              inheritPk:
                type: string
              id:
                type: string
              created:
                type: string
              modified:
                type: string
              archived:
                type: boolean
              deleted:
                type: boolean
              classCanonicalName:
                type: string
              classSimpleName:
                type: string
              classCanonicalNames:
                type: array
                items:
                  type: string
              sessionId:
                type: string
              userId:
                type: string
              userKey:
                type: string
              saves:
                type: array
                items:
                  type: string
              objectTitle:
                type: string
              objectId:
                type: string
              objectNameVar:
                type: string
              objectSuggest:
                type: string
              objectText:
                type: string
              pageUrlId:
                type: string
              pageUrlPk:
                type: string
              pageUrlApi:
                type: string
              pageH1:
                type: string
    PUTCopyClusterRequest:
      allOf:
        - type: object
          properties:
            pk:
              type: string
            inheritPk:
              type: string
            id:
              type: string
            created:
              type: string
            modified:
              type: string
            archived:
              type: boolean
            deleted:
              type: boolean
            classCanonicalName:
              type: string
            classSimpleName:
              type: string
            classCanonicalNames:
              type: array
              items:
                type: string
            sessionId:
              type: string
            userId:
              type: string
            userKey:
              type: string
            saves:
              type: array
              items:
                type: string
            objectTitle:
              type: string
            objectId:
              type: string
            objectNameVar:
              type: string
            objectSuggest:
              type: string
            objectText:
              type: string
            pageUrlId:
              type: string
            pageUrlPk:
              type: string
            pageUrlApi:
              type: string
            pageH1:
              type: string
    PUTCopyClusterResponse:
      allOf:
        - type: object
          properties:
            pk:
              type: string
            inheritPk:
              type: string
            id:
              type: string
            created:
              type: string
            modified:
              type: string
            archived:
              type: boolean
            deleted:
              type: boolean
            classCanonicalName:
              type: string
            classSimpleName:
              type: string
            classCanonicalNames:
              type: array
              items:
                type: string
            sessionId:
              type: string
            userId:
              type: string
            userKey:
              type: string
            saves:
              type: array
              items:
                type: string
            objectTitle:
              type: string
            objectId:
              type: string
            objectNameVar:
              type: string
            objectSuggest:
              type: string
            objectText:
              type: string
            pageUrlId:
              type: string
            pageUrlPk:
              type: string
            pageUrlApi:
              type: string
            pageH1:
              type: string
    PUTImportClusterRequest:
      allOf:
        - type: object
          properties:
            pk:
              type: string
            inheritPk:
              type: string
            id:
              type: string
            created:
              type: string
            modified:
              type: string
            archived:
              type: boolean
            deleted:
              type: boolean
            classCanonicalName:
              type: string
            classSimpleName:
              type: string
            classCanonicalNames:
              type: array
              items:
                type: string
            sessionId:
              type: string
            userId:
              type: string
            userKey:
              type: string
            saves:
              type: array
              items:
                type: string
            objectTitle:
              type: string
            objectId:
              type: string
            objectNameVar:
              type: string
            objectSuggest:
              type: string
            objectText:
              type: string
            pageUrlId:
              type: string
            pageUrlPk:
              type: string
            pageUrlApi:
              type: string
            pageH1:
              type: string
    PUTImportClusterResponse:
      allOf:
        - type: object
          properties:
            pk:
              type: string
            inheritPk:
              type: string
            id:
              type: string
            created:
              type: string
            modified:
              type: string
            archived:
              type: boolean
            deleted:
              type: boolean
            classCanonicalName:
              type: string
            classSimpleName:
              type: string
            classCanonicalNames:
              type: array
              items:
                type: string
            sessionId:
              type: string
            userId:
              type: string
            userKey:
              type: string
            saves:
              type: array
              items:
                type: string
            objectTitle:
              type: string
            objectId:
              type: string
            objectNameVar:
              type: string
            objectSuggest:
              type: string
            objectText:
              type: string
            pageUrlId:
              type: string
            pageUrlPk:
              type: string
            pageUrlApi:
              type: string
            pageH1:
              type: string
    PUTMergeClusterRequest:
      allOf:
        - type: object
          properties:
            pk:
              type: string
            inheritPk:
              type: string
            id:
              type: string
            created:
              type: string
            modified:
              type: string
            archived:
              type: boolean
            deleted:
              type: boolean
            classCanonicalName:
              type: string
            classSimpleName:
              type: string
            classCanonicalNames:
              type: array
              items:
                type: string
            sessionId:
              type: string
            userId:
              type: string
            userKey:
              type: string
            saves:
              type: array
              items:
                type: string
            objectTitle:
              type: string
            objectId:
              type: string
            objectNameVar:
              type: string
            objectSuggest:
              type: string
            objectText:
              type: string
            pageUrlId:
              type: string
            pageUrlPk:
              type: string
            pageUrlApi:
              type: string
            pageH1:
              type: string
    PUTMergeClusterResponse:
      allOf:
        - type: object
          properties:
            pk:
              type: string
            inheritPk:
              type: string
            id:
              type: string
            created:
              type: string
            modified:
              type: string
            archived:
              type: boolean
            deleted:
              type: boolean
            classCanonicalName:
              type: string
            classSimpleName:
              type: string
            classCanonicalNames:
              type: array
              items:
                type: string
            sessionId:
              type: string
            userId:
              type: string
            userKey:
              type: string
            saves:
              type: array
              items:
                type: string
            objectTitle:
              type: string
            objectId:
              type: string
            objectNameVar:
              type: string
            objectSuggest:
              type: string
            objectText:
              type: string
            pageUrlId:
              type: string
            pageUrlPk:
              type: string
            pageUrlApi:
              type: string
            pageH1:
              type: string
    GETClusterResponse:
      allOf:
        - type: object
          properties:
            pk:
              type: string
            inheritPk:
              type: string
            id:
              type: string
            created:
              type: string
            modified:
              type: string
            archived:
              type: boolean
            deleted:
              type: boolean
            classCanonicalName:
              type: string
            classSimpleName:
              type: string
            classCanonicalNames:
              type: array
              items:
                type: string
            sessionId:
              type: string
            userId:
              type: string
            userKey:
              type: string
            saves:
              type: array
              items:
                type: string
            objectTitle:
              type: string
            objectId:
              type: string
            objectNameVar:
              type: string
            objectSuggest:
              type: string
            objectText:
              type: string
            pageUrlId:
              type: string
            pageUrlPk:
              type: string
            pageUrlApi:
              type: string
            pageH1:
              type: string
    SearchPageClusterResponse:
      allOf:
        - type: string
    HomePageSearchPagePageDesignResponse:
      allOf:
        - type: string
    AdminSearchPageDesignResponse:
      allOf:
        - type: array
          items:
            type: object
            properties:
              pageDesignKey:
                type: string
              childDesignKeys:
                type: array
                items:
                  type: string
              parentDesignKeys:
                type: array
                items:
                  type: string
              htmlPartKeys:
                type: array
                items:
                  type: string
              pageDesignCompleteName:
                type: string
              designHidden:
                type: boolean
    POSTPageDesignRequest:
      allOf:
        - $ref: "#/components/schemas/POSTClusterRequest"
        - type: object
          properties:
            pageDesignKey:
              type: string
            childDesignKeys:
              type: array
              items:
                type: string
            parentDesignKeys:
              type: array
              items:
                type: string
            htmlPartKeys:
              type: array
              items:
                type: string
            pageDesignCompleteName:
              type: string
            designHidden:
              type: boolean
    POSTPageDesignResponse:
      allOf:
        - $ref: "#/components/schemas/POSTClusterResponse"
        - type: object
          properties:
            pageDesignKey:
              type: string
            childDesignKeys:
              type: array
              items:
                type: string
            parentDesignKeys:
              type: array
              items:
                type: string
            htmlPartKeys:
              type: array
              items:
                type: string
            pageDesignCompleteName:
              type: string
            designHidden:
              type: boolean
    PATCHPageDesignRequest:
      allOf:
        - $ref: "#/components/schemas/PATCHClusterRequest"
        - type: object
          properties:
            setPageDesignKey:
              type: string
              nullable: true
            removePageDesignKey:
              type: string
            removeAllPageDesignKey:
              type: string
            setChildDesignKeys:
              type: array
              nullable: true
              items:
                type: string
            removeChildDesignKeys:
              type: string
            removeAllChildDesignKeys:
              type: array
              items:
                type: string
            addChildDesignKeys:
              type: string
            addAllChildDesignKeys:
              type: array
              items:
                type: string
            setParentDesignKeys:
              type: array
              nullable: true
              items:
                type: string
            removeParentDesignKeys:
              type: string
            removeAllParentDesignKeys:
              type: array
              items:
                type: string
            addParentDesignKeys:
              type: string
            addAllParentDesignKeys:
              type: array
              items:
                type: string
            setHtmlPartKeys:
              type: array
              nullable: true
              items:
                type: string
            removeHtmlPartKeys:
              type: string
            removeAllHtmlPartKeys:
              type: array
              items:
                type: string
            addHtmlPartKeys:
              type: string
            addAllHtmlPartKeys:
              type: array
              items:
                type: string
            setPageDesignCompleteName:
              type: string
              nullable: true
            removePageDesignCompleteName:
              type: string
            removeAllPageDesignCompleteName:
              type: string
            setDesignHidden:
              type: boolean
              nullable: true
            removeDesignHidden:
              type: boolean
            removeAllDesignHidden:
              type: boolean
    PATCHPageDesignResponse:
      allOf:
        - $ref: "#/components/schemas/PATCHClusterResponse"
        - type: object
          properties:
            setPageDesignKey:
              type: string
              nullable: true
            removePageDesignKey:
              type: string
            removeAllPageDesignKey:
              type: string
            setChildDesignKeys:
              type: array
              nullable: true
              items:
                type: string
            removeChildDesignKeys:
              type: string
            removeAllChildDesignKeys:
              type: array
              items:
                type: string
            addChildDesignKeys:
              type: string
            addAllChildDesignKeys:
              type: array
              items:
                type: string
            setParentDesignKeys:
              type: array
              nullable: true
              items:
                type: string
            removeParentDesignKeys:
              type: string
            removeAllParentDesignKeys:
              type: array
              items:
                type: string
            addParentDesignKeys:
              type: string
            addAllParentDesignKeys:
              type: array
              items:
                type: string
            setHtmlPartKeys:
              type: array
              nullable: true
              items:
                type: string
            removeHtmlPartKeys:
              type: string
            removeAllHtmlPartKeys:
              type: array
              items:
                type: string
            addHtmlPartKeys:
              type: string
            addAllHtmlPartKeys:
              type: array
              items:
                type: string
            setPageDesignCompleteName:
              type: string
              nullable: true
            removePageDesignCompleteName:
              type: string
            removeAllPageDesignCompleteName:
              type: string
            setDesignHidden:
              type: boolean
              nullable: true
            removeDesignHidden:
              type: boolean
            removeAllDesignHidden:
              type: boolean
    SearchPageDesignResponse:
      allOf:
        - $ref: "#/components/schemas/SearchClusterResponse"
        - type: array
          items:
            type: object
            properties:
              pageDesignKey:
                type: string
              childDesignKeys:
                type: array
                items:
                  type: string
              parentDesignKeys:
                type: array
                items:
                  type: string
              htmlPartKeys:
                type: array
                items:
                  type: string
              pageDesignCompleteName:
                type: string
              designHidden:
                type: boolean
    PUTCopyPageDesignRequest:
      allOf:
        - $ref: "#/components/schemas/PUTCopyClusterRequest"
        - type: object
          properties:
            pageDesignKey:
              type: string
            childDesignKeys:
              type: array
              items:
                type: string
            parentDesignKeys:
              type: array
              items:
                type: string
            htmlPartKeys:
              type: array
              items:
                type: string
            pageDesignCompleteName:
              type: string
            designHidden:
              type: boolean
    PUTCopyPageDesignResponse:
      allOf:
        - $ref: "#/components/schemas/PUTCopyClusterResponse"
        - type: object
          properties:
            pageDesignKey:
              type: string
            childDesignKeys:
              type: array
              items:
                type: string
            parentDesignKeys:
              type: array
              items:
                type: string
            htmlPartKeys:
              type: array
              items:
                type: string
            pageDesignCompleteName:
              type: string
            designHidden:
              type: boolean
    PUTImportPageDesignRequest:
      allOf:
        - $ref: "#/components/schemas/PUTImportClusterRequest"
        - type: object
          properties:
            pageDesignKey:
              type: string
            childDesignKeys:
              type: array
              items:
                type: string
            parentDesignKeys:
              type: array
              items:
                type: string
            htmlPartKeys:
              type: array
              items:
                type: string
            pageDesignCompleteName:
              type: string
            designHidden:
              type: boolean
    PUTImportPageDesignResponse:
      allOf:
        - $ref: "#/components/schemas/PUTImportClusterResponse"
        - type: object
          properties:
            pageDesignKey:
              type: string
            childDesignKeys:
              type: array
              items:
                type: string
            parentDesignKeys:
              type: array
              items:
                type: string
            htmlPartKeys:
              type: array
              items:
                type: string
            pageDesignCompleteName:
              type: string
            designHidden:
              type: boolean
    PUTMergePageDesignRequest:
      allOf:
        - $ref: "#/components/schemas/PUTMergeClusterRequest"
        - type: object
          properties:
            pageDesignKey:
              type: string
            childDesignKeys:
              type: array
              items:
                type: string
            parentDesignKeys:
              type: array
              items:
                type: string
            htmlPartKeys:
              type: array
              items:
                type: string
            pageDesignCompleteName:
              type: string
            designHidden:
              type: boolean
    PUTMergePageDesignResponse:
      allOf:
        - $ref: "#/components/schemas/PUTMergeClusterResponse"
        - type: object
          properties:
            pageDesignKey:
              type: string
            childDesignKeys:
              type: array
              items:
                type: string
            parentDesignKeys:
              type: array
              items:
                type: string
            htmlPartKeys:
              type: array
              items:
                type: string
            pageDesignCompleteName:
              type: string
            designHidden:
              type: boolean
    GETPageDesignResponse:
      allOf:
        - $ref: "#/components/schemas/GETClusterResponse"
        - type: object
          properties:
            pageDesignKey:
              type: string
            childDesignKeys:
              type: array
              items:
                type: string
            parentDesignKeys:
              type: array
              items:
                type: string
            htmlPartKeys:
              type: array
              items:
                type: string
            pageDesignCompleteName:
              type: string
            designHidden:
              type: boolean
    DesignEmailSearchPagePageDesignResponse:
      allOf:
        - type: string
    DesignDisplaySearchPagePageDesignResponse:
      allOf:
        - type: string
    SearchPagePageDesignResponse:
      allOf:
        - type: string
    DesignPdfSearchPagePageDesignResponse:
      allOf:
        - type: string
        - format: binary
    AdminSearchMedicalPatientResponse:
      allOf:
        - type: array
          items:
            type: object
            properties:
              patientKey:
                type: string
              enrollmentKeys:
                type: array
                items:
                  type: string
              schoolSort:
                type: string
              userKeys:
                type: array
                items:
                  type: string
              clinicKeys:
                type: array
                items:
                  type: string
              patientFirstName:
                type: string
              patientFirstNamePreferred:
                type: string
              familyName:
                type: string
              patientCompleteName:
                type: string
              patientCompleteNamePreferred:
                type: string
              patientFormalName:
                type: string
              patientBirthDate:
                type: string
              patientBirthDateYear:
                type: string
              patientBirthDateMonthOfYear:
                type: string
              patientBirthDateDayOfWeek:
                type: string
    POSTMedicalPatientRequest:
      allOf:
        - $ref: "#/components/schemas/POSTClusterRequest"
        - type: object
          properties:
            patientKey:
              type: string
            enrollmentKeys:
              type: array
              items:
                type: string
            schoolSort:
              type: string
            userKeys:
              type: array
              items:
                type: string
            clinicKeys:
              type: array
              items:
                type: string
            patientFirstName:
              type: string
            patientFirstNamePreferred:
              type: string
            familyName:
              type: string
            patientCompleteName:
              type: string
            patientCompleteNamePreferred:
              type: string
            patientFormalName:
              type: string
            patientBirthDate:
              type: string
            patientBirthDateYear:
              type: string
            patientBirthDateMonthOfYear:
              type: string
            patientBirthDateDayOfWeek:
              type: string
    POSTMedicalPatientResponse:
      allOf:
        - $ref: "#/components/schemas/POSTClusterResponse"
        - type: object
          properties:
            patientKey:
              type: string
            enrollmentKeys:
              type: array
              items:
                type: string
            schoolSort:
              type: string
            userKeys:
              type: array
              items:
                type: string
            clinicKeys:
              type: array
              items:
                type: string
            patientFirstName:
              type: string
            patientFirstNamePreferred:
              type: string
            familyName:
              type: string
            patientCompleteName:
              type: string
            patientCompleteNamePreferred:
              type: string
            patientFormalName:
              type: string
            patientBirthDate:
              type: string
            patientBirthDateYear:
              type: string
            patientBirthDateMonthOfYear:
              type: string
            patientBirthDateDayOfWeek:
              type: string
    PATCHMedicalPatientRequest:
      allOf:
        - $ref: "#/components/schemas/PATCHClusterRequest"
        - type: object
          properties:
            setPatientKey:
              type: string
              nullable: true
            removePatientKey:
              type: string
            removeAllPatientKey:
              type: string
            setEnrollmentKeys:
              type: array
              nullable: true
              items:
                type: string
            removeEnrollmentKeys:
              type: string
            removeAllEnrollmentKeys:
              type: array
              items:
                type: string
            addEnrollmentKeys:
              type: string
            addAllEnrollmentKeys:
              type: array
              items:
                type: string
            setSchoolSort:
              type: string
              nullable: true
            removeSchoolSort:
              type: string
            removeAllSchoolSort:
              type: string
            setUserKeys:
              type: array
              nullable: true
              items:
                type: string
            removeUserKeys:
              type: string
            removeAllUserKeys:
              type: array
              items:
                type: string
            addUserKeys:
              type: string
            addAllUserKeys:
              type: array
              items:
                type: string
            setClinicKeys:
              type: array
              nullable: true
              items:
                type: string
            removeClinicKeys:
              type: string
            removeAllClinicKeys:
              type: array
              items:
                type: string
            addClinicKeys:
              type: string
            addAllClinicKeys:
              type: array
              items:
                type: string
            setPatientFirstName:
              type: string
              nullable: true
            removePatientFirstName:
              type: string
            removeAllPatientFirstName:
              type: string
            setPatientFirstNamePreferred:
              type: string
              nullable: true
            removePatientFirstNamePreferred:
              type: string
            removeAllPatientFirstNamePreferred:
              type: string
            setFamilyName:
              type: string
              nullable: true
            removeFamilyName:
              type: string
            removeAllFamilyName:
              type: string
            setPatientCompleteName:
              type: string
              nullable: true
            removePatientCompleteName:
              type: string
            removeAllPatientCompleteName:
              type: string
            setPatientCompleteNamePreferred:
              type: string
              nullable: true
            removePatientCompleteNamePreferred:
              type: string
            removeAllPatientCompleteNamePreferred:
              type: string
            setPatientFormalName:
              type: string
              nullable: true
            removePatientFormalName:
              type: string
            removeAllPatientFormalName:
              type: string
            setPatientBirthDate:
              type: string
              nullable: true
            removePatientBirthDate:
              type: string
            removeAllPatientBirthDate:
              type: string
            setPatientBirthDateYear:
              type: string
              nullable: true
            removePatientBirthDateYear:
              type: string
            removeAllPatientBirthDateYear:
              type: string
            setPatientBirthDateMonthOfYear:
              type: string
              nullable: true
            removePatientBirthDateMonthOfYear:
              type: string
            removeAllPatientBirthDateMonthOfYear:
              type: string
            setPatientBirthDateDayOfWeek:
              type: string
              nullable: true
            removePatientBirthDateDayOfWeek:
              type: string
            removeAllPatientBirthDateDayOfWeek:
              type: string
    PATCHMedicalPatientResponse:
      allOf:
        - $ref: "#/components/schemas/PATCHClusterResponse"
        - type: object
          properties:
            setPatientKey:
              type: string
              nullable: true
            removePatientKey:
              type: string
            removeAllPatientKey:
              type: string
            setEnrollmentKeys:
              type: array
              nullable: true
              items:
                type: string
            removeEnrollmentKeys:
              type: string
            removeAllEnrollmentKeys:
              type: array
              items:
                type: string
            addEnrollmentKeys:
              type: string
            addAllEnrollmentKeys:
              type: array
              items:
                type: string
            setSchoolSort:
              type: string
              nullable: true
            removeSchoolSort:
              type: string
            removeAllSchoolSort:
              type: string
            setUserKeys:
              type: array
              nullable: true
              items:
                type: string
            removeUserKeys:
              type: string
            removeAllUserKeys:
              type: array
              items:
                type: string
            addUserKeys:
              type: string
            addAllUserKeys:
              type: array
              items:
                type: string
            setClinicKeys:
              type: array
              nullable: true
              items:
                type: string
            removeClinicKeys:
              type: string
            removeAllClinicKeys:
              type: array
              items:
                type: string
            addClinicKeys:
              type: string
            addAllClinicKeys:
              type: array
              items:
                type: string
            setPatientFirstName:
              type: string
              nullable: true
            removePatientFirstName:
              type: string
            removeAllPatientFirstName:
              type: string
            setPatientFirstNamePreferred:
              type: string
              nullable: true
            removePatientFirstNamePreferred:
              type: string
            removeAllPatientFirstNamePreferred:
              type: string
            setFamilyName:
              type: string
              nullable: true
            removeFamilyName:
              type: string
            removeAllFamilyName:
              type: string
            setPatientCompleteName:
              type: string
              nullable: true
            removePatientCompleteName:
              type: string
            removeAllPatientCompleteName:
              type: string
            setPatientCompleteNamePreferred:
              type: string
              nullable: true
            removePatientCompleteNamePreferred:
              type: string
            removeAllPatientCompleteNamePreferred:
              type: string
            setPatientFormalName:
              type: string
              nullable: true
            removePatientFormalName:
              type: string
            removeAllPatientFormalName:
              type: string
            setPatientBirthDate:
              type: string
              nullable: true
            removePatientBirthDate:
              type: string
            removeAllPatientBirthDate:
              type: string
            setPatientBirthDateYear:
              type: string
              nullable: true
            removePatientBirthDateYear:
              type: string
            removeAllPatientBirthDateYear:
              type: string
            setPatientBirthDateMonthOfYear:
              type: string
              nullable: true
            removePatientBirthDateMonthOfYear:
              type: string
            removeAllPatientBirthDateMonthOfYear:
              type: string
            setPatientBirthDateDayOfWeek:
              type: string
              nullable: true
            removePatientBirthDateDayOfWeek:
              type: string
            removeAllPatientBirthDateDayOfWeek:
              type: string
    SearchMedicalPatientResponse:
      allOf:
        - $ref: "#/components/schemas/SearchClusterResponse"
        - type: array
          items:
            type: object
            properties:
              patientKey:
                type: string
              enrollmentKeys:
                type: array
                items:
                  type: string
              schoolSort:
                type: string
              userKeys:
                type: array
                items:
                  type: string
              clinicKeys:
                type: array
                items:
                  type: string
              patientFirstName:
                type: string
              patientFirstNamePreferred:
                type: string
              familyName:
                type: string
              patientCompleteName:
                type: string
              patientCompleteNamePreferred:
                type: string
              patientFormalName:
                type: string
              patientBirthDate:
                type: string
              patientBirthDateYear:
                type: string
              patientBirthDateMonthOfYear:
                type: string
              patientBirthDateDayOfWeek:
                type: string
    PUTCopyMedicalPatientRequest:
      allOf:
        - $ref: "#/components/schemas/PUTCopyClusterRequest"
        - type: object
          properties:
            patientKey:
              type: string
            enrollmentKeys:
              type: array
              items:
                type: string
            schoolSort:
              type: string
            userKeys:
              type: array
              items:
                type: string
            clinicKeys:
              type: array
              items:
                type: string
            patientFirstName:
              type: string
            patientFirstNamePreferred:
              type: string
            familyName:
              type: string
            patientCompleteName:
              type: string
            patientCompleteNamePreferred:
              type: string
            patientFormalName:
              type: string
            patientBirthDate:
              type: string
            patientBirthDateYear:
              type: string
            patientBirthDateMonthOfYear:
              type: string
            patientBirthDateDayOfWeek:
              type: string
    PUTCopyMedicalPatientResponse:
      allOf:
        - $ref: "#/components/schemas/PUTCopyClusterResponse"
        - type: object
          properties:
            patientKey:
              type: string
            enrollmentKeys:
              type: array
              items:
                type: string
            schoolSort:
              type: string
            userKeys:
              type: array
              items:
                type: string
            clinicKeys:
              type: array
              items:
                type: string
            patientFirstName:
              type: string
            patientFirstNamePreferred:
              type: string
            familyName:
              type: string
            patientCompleteName:
              type: string
            patientCompleteNamePreferred:
              type: string
            patientFormalName:
              type: string
            patientBirthDate:
              type: string
            patientBirthDateYear:
              type: string
            patientBirthDateMonthOfYear:
              type: string
            patientBirthDateDayOfWeek:
              type: string
    PUTImportMedicalPatientRequest:
      allOf:
        - $ref: "#/components/schemas/PUTImportClusterRequest"
        - type: object
          properties:
            patientKey:
              type: string
            enrollmentKeys:
              type: array
              items:
                type: string
            schoolSort:
              type: string
            userKeys:
              type: array
              items:
                type: string
            clinicKeys:
              type: array
              items:
                type: string
            patientFirstName:
              type: string
            patientFirstNamePreferred:
              type: string
            familyName:
              type: string
            patientCompleteName:
              type: string
            patientCompleteNamePreferred:
              type: string
            patientFormalName:
              type: string
            patientBirthDate:
              type: string
            patientBirthDateYear:
              type: string
            patientBirthDateMonthOfYear:
              type: string
            patientBirthDateDayOfWeek:
              type: string
    PUTImportMedicalPatientResponse:
      allOf:
        - $ref: "#/components/schemas/PUTImportClusterResponse"
        - type: object
          properties:
            patientKey:
              type: string
            enrollmentKeys:
              type: array
              items:
                type: string
            schoolSort:
              type: string
            userKeys:
              type: array
              items:
                type: string
            clinicKeys:
              type: array
              items:
                type: string
            patientFirstName:
              type: string
            patientFirstNamePreferred:
              type: string
            familyName:
              type: string
            patientCompleteName:
              type: string
            patientCompleteNamePreferred:
              type: string
            patientFormalName:
              type: string
            patientBirthDate:
              type: string
            patientBirthDateYear:
              type: string
            patientBirthDateMonthOfYear:
              type: string
            patientBirthDateDayOfWeek:
              type: string
    PUTMergeMedicalPatientRequest:
      allOf:
        - $ref: "#/components/schemas/PUTMergeClusterRequest"
        - type: object
          properties:
            patientKey:
              type: string
            enrollmentKeys:
              type: array
              items:
                type: string
            schoolSort:
              type: string
            userKeys:
              type: array
              items:
                type: string
            clinicKeys:
              type: array
              items:
                type: string
            patientFirstName:
              type: string
            patientFirstNamePreferred:
              type: string
            familyName:
              type: string
            patientCompleteName:
              type: string
            patientCompleteNamePreferred:
              type: string
            patientFormalName:
              type: string
            patientBirthDate:
              type: string
            patientBirthDateYear:
              type: string
            patientBirthDateMonthOfYear:
              type: string
            patientBirthDateDayOfWeek:
              type: string
    PUTMergeMedicalPatientResponse:
      allOf:
        - $ref: "#/components/schemas/PUTMergeClusterResponse"
        - type: object
          properties:
            patientKey:
              type: string
            enrollmentKeys:
              type: array
              items:
                type: string
            schoolSort:
              type: string
            userKeys:
              type: array
              items:
                type: string
            clinicKeys:
              type: array
              items:
                type: string
            patientFirstName:
              type: string
            patientFirstNamePreferred:
              type: string
            familyName:
              type: string
            patientCompleteName:
              type: string
            patientCompleteNamePreferred:
              type: string
            patientFormalName:
              type: string
            patientBirthDate:
              type: string
            patientBirthDateYear:
              type: string
            patientBirthDateMonthOfYear:
              type: string
            patientBirthDateDayOfWeek:
              type: string
    GETMedicalPatientResponse:
      allOf:
        - $ref: "#/components/schemas/GETClusterResponse"
        - type: object
          properties:
            patientKey:
              type: string
            enrollmentKeys:
              type: array
              items:
                type: string
            schoolSort:
              type: string
            userKeys:
              type: array
              items:
                type: string
            clinicKeys:
              type: array
              items:
                type: string
            patientFirstName:
              type: string
            patientFirstNamePreferred:
              type: string
            familyName:
              type: string
            patientCompleteName:
              type: string
            patientCompleteNamePreferred:
              type: string
            patientFormalName:
              type: string
            patientBirthDate:
              type: string
            patientBirthDateYear:
              type: string
            patientBirthDateMonthOfYear:
              type: string
            patientBirthDateDayOfWeek:
              type: string
    SearchPageMedicalPatientResponse:
      allOf:
        - type: string
    ErrorResponse:
      required:
        - type
        - code
      properties:
        type:
          type: string
          enum:
            - ERROR
            - WARN
            - INVALID
            - FATAL
          description: >+
            <br>invalid - Request did not confirm to the specification and was
            unprocessed & rejected. Please fix the value and try again</br>       
            <br>warn - Request was partially processed.  E.g. some of the fields
            are missing in response to the system issues,  request was accepted
            successfully but will be processed asynchronously</br>                
            <br>error - The request was accepted but could not be processed
            successfully</br>            <br>fatal - There was an internal system
            error while processing the request. These are technical errors and
            will be resolved by Citi, and the consumer should retry after some
            time. Business errors will not be categorized as fatal </br>
        code:
          type: string
          description: Error code which qualifies the error. 
        details:
          type: string
          description: Human readable explanation specific to the occurrence of the problem. 
        location:
          type: string
          description: The name of the field that resulted in the error. 
        moreInfo:
          type: string
          description: URI to human readable documentation of the error. 
